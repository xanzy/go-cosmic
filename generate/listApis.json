{
  "api": [
    {
      "description": "Creates VPC offering",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "createVPCOffering",
      "params": [
        {
          "description": "desired service capabilities as part of vpc offering",
          "length": 255,
          "name": "servicecapabilitylist",
          "required": false,
          "since": "4.4",
          "type": "map"
        },
        {
          "description": "services supported by the vpc offering",
          "length": 255,
          "name": "supportedservices",
          "required": true,
          "type": "list"
        },
        {
          "description": "the name of the vpc offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network",
          "length": 255,
          "name": "serviceproviderlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "the display text of the vpc offering",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the second VPC router appliance (in case of redundancy)",
          "length": 255,
          "name": "secondaryserviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the service offering for the VPC router appliance",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateVPCOffering,listVPCOfferings",
      "response": [
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "The primary system compute offering name used for the virtual router",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "The primary system compute offering id used for the virtual router",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "The secondary system compute offering name used for the virtual router",
          "name": "secondaryserviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "The secondary system compute offering id used for the virtual router",
          "name": "secondaryserviceofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a new Pod.",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": false,
      "name": "createPod",
      "params": [
        {
          "description": "the Zone ID in which the Pod will be created",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the starting IP address for the Pod",
          "length": 255,
          "name": "startip",
          "required": true,
          "type": "string"
        },
        {
          "description": "the gateway for the Pod",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "Allocation state of this Pod for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IP address for the Pod",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask for the Pod",
          "length": 255,
          "name": "netmask",
          "required": true,
          "type": "string"
        },
        {
          "description": "the name of the Pod",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "updatePod,listPods",
      "response": [
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ending IP for the Pod",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the starting IP for the Pod",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an account from an LDAP user",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "ldapCreateAccount",
      "params": [
        {
          "description": "Account UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "accountid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Unique username.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": true,
          "type": "short"
        },
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain for the account's networks",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        }
      ],
      "related": "markDefaultZoneForAccount,listAccounts,updateAccount,createAccount,disableAccount,listAccounts,enableAccount,lockAccount",
      "response": [
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a Pod.",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": false,
      "name": "deletePod",
      "params": [
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "id",
          "related": "updatePod,listPods",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Copies an iso from one zone to another.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": true,
      "name": "copyIso",
      "params": [
        {
          "description": "Template ID.",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateIso,listTemplates,copyIso,updateTemplate,prepareTemplate,copyTemplate,registerIso,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is being copied to.",
          "length": 255,
          "name": "destzoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is currently hosted on. If not specified and template is cross-zone, then we will sync this template to region wide image store.",
          "length": 255,
          "name": "sourcezoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,registerIso,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        }
      ]
    },
    {
      "description": "Lists all DeploymentPlanners available.",
      "groupdescription": "Configuration",
      "groupname": "ConfigurationService",
      "isasync": false,
      "name": "listDeploymentPlanners",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Deployment Planner name",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a cluster.",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": false,
      "name": "deleteCluster",
      "params": [
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "id",
          "related": "addCluster,updateCluster,listClusters",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Prepares a host for maintenance.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": true,
      "name": "prepareHostForMaintenance",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,listHosts,prepareHostForMaintenance,cancelHostMaintenance,addHost,updateHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "reconnectHost,listHosts,cancelHostMaintenance,addHost,updateHost",
      "response": [
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            },
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes specified region",
      "groupdescription": "Region",
      "groupname": "RegionService",
      "isasync": false,
      "name": "removeRegion",
      "params": [
        {
          "description": "ID of the region to delete",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Upload a data disk to the cloudstack cloud.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": false,
      "name": "getUploadParamsForVolume",
      "params": [
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the volume/template. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the zone the volume/template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the MD5 checksum value of this volume/template",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk offering. This must be a custom sized offering since during upload of volume/template size is unknown.",
          "length": 255,
          "name": "diskofferingid",
          "related": "updateDiskOffering,listDiskOfferings,createDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Image store uuid",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Upload volume/template for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjects,suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the volume/template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "getUploadParamsForTemplate",
      "response": [
        {
          "description": "the timestamp after which the signature expires",
          "name": "expires",
          "type": "string"
        },
        {
          "description": "POST url to upload the file to",
          "name": "postURL",
          "type": "url"
        },
        {
          "description": "the template/volume ID",
          "name": "id",
          "type": "uuid"
        },
        {
          "description": "signature to be sent in the POST request.",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "encrypted data to be sent in the POST request.",
          "name": "metadata",
          "type": "string"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Lists hosts.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "listHosts",
      "params": [
        {
          "description": "comma separated list of host details requested, value can be a list of [ min, all, capacity, events, stats]",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the state of the host",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the host",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of the host",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,listHosts,cancelHostMaintenance,addHost,updateHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists hosts existing in particular cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster,listClusters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list hosts by resource state. Resource state represents current state determined by admin of host, valule can be one of [Enabled, Disabled, Unmanaged, PrepareForMaintenance, ErrorInMaintenance, Maintenance, Error]",
          "length": 255,
          "name": "resourcestate",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists hosts in the same cluster as this VM and flag hosts with enough CPU/RAm to host this VM",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,revertToVMSnapshot,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true, list only hosts dedicated to HA",
          "length": 255,
          "name": "hahost",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "hypervisor type of host: XenServer,KVM",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the host",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "reconnectHost,cancelHostMaintenance,addHost,updateHost",
      "response": [
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            },
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a storage pool.",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": false,
      "name": "deleteStoragePool",
      "params": [
        {
          "description": "Force destroy storage pool (force expunge volumes in Destroyed state as a part of pool removal)",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Storage pool id",
          "length": 255,
          "name": "id",
          "related": "findStoragePoolsForMigration,listStoragePools,updateStoragePool,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all for this MAC address",
      "groupdescription": "CloudOps",
      "groupname": "CloudOpsService",
      "isasync": false,
      "name": "listWhoHasThisMac",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "The MAC Address that you are searching the owner of.",
          "length": 255,
          "name": "macaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "The UUID of nics row.",
          "length": 255,
          "name": "uuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listWhoHasThisIp",
      "response": [
        {
          "description": "Netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "VM type",
          "name": "virtualmachinetype",
          "type": "virtualmachinetype"
        },
        {
          "description": "Nics MAC Address",
          "name": "macaddress",
          "type": "string"
        },
        {
          "description": "Network name",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "Mode",
          "name": "mode",
          "type": "dhcpmode"
        },
        {
          "description": "VM uuid",
          "name": "virtualmachineuuid",
          "type": "string"
        },
        {
          "description": "VPC name",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "Domain name",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "Broadcast uri",
          "name": "broadcasturi",
          "type": "uri"
        },
        {
          "description": "Associated network uuid",
          "name": "associatednetworkuuid",
          "type": "string"
        },
        {
          "description": "VM Name",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "VPC uuid",
          "name": "vpcuuid",
          "type": "string"
        },
        {
          "description": "State",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "UUID of the nic or users_ip_address",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Network uuid",
          "name": "networkuuid",
          "type": "string"
        },
        {
          "description": "Domain uuid",
          "name": "domainuuid",
          "type": "string"
        },
        {
          "description": "Associated network name",
          "name": "associatednetworkname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a snapshot of a disk volume.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "deleteSnapshot",
      "params": [
        {
          "description": "The ID of the snapshot",
          "length": 255,
          "name": "id",
          "related": "revertSnapshot,createSnapshotFromVMSnapshot,listSnapshots,createSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "List the virtual machines owned by the account.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": false,
      "name": "listVirtualMachines",
      "params": [
        {
          "description": "list vms by vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,updateVPC,restartVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the virtual machine (a substring match is made against the parameter value, data for all matching VMs will be returned)",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the group ID",
          "length": 255,
          "name": "groupid",
          "related": "updateInstanceGroup,createInstanceGroup,listInstanceGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by the service offering",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list vms by ssh keypair name",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,revertToVMSnapshot,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "listProjects,suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,cancelHostMaintenance,addHost,updateHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, diskoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the user ID that created the VM and is under the account that owns the VM",
          "length": 255,
          "name": "userid",
          "related": "getUser,updateUser,enableUser,createUser,disableUser,lockUser,listUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list vms by iso",
          "length": 255,
          "name": "isoid",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,cancelHostMaintenance,addHost,updateHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the pod ID",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network type; true if need to list vms using Virtual Network, false otherwise",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,updateStoragePool,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list vms by template",
          "length": 255,
          "name": "templateid",
          "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,registerIso,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "state of the virtual machine. Possible values are: Running, Stopped, Present, Destroyed, Expunged. Present is used for the state equal not destroyed.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the virtual machines, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,revertToVMSnapshot,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "since": "4.4",
          "type": "list"
        },
        {
          "description": "list vms by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "createAffinityGroup,listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the pod ID",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,updateStoragePool,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,revertToVMSnapshot,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {},
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates a storage pool.",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": false,
      "name": "updateStoragePool",
      "params": [
        {
          "description": "comma-separated list of tags for the storage pool",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the Id of the storage pool",
          "length": 255,
          "name": "id",
          "related": "findStoragePoolsForMigration,listStoragePools,updateStoragePool,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacityiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "bytes CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacitybytes",
          "required": false,
          "type": "long"
        },
        {
          "description": "false to disable the pool for allocation of new volumes, true to enable it back.",
          "length": 255,
          "name": "enabled",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
      "response": [
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates the information about Guest OS to Hypervisor specific name mapping",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": true,
      "name": "updateGuestOsMapping",
      "params": [
        {
          "description": "Hypervisor specific name for this Guest OS",
          "length": 255,
          "name": "osnameforhypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of the Guest OS to hypervisor name Mapping",
          "length": 255,
          "name": "id",
          "related": "updateGuestOsMapping,listGuestOsMapping,addGuestOsMapping",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listGuestOsMapping,addGuestOsMapping",
      "response": [
        {
          "description": "hypervisor specific name for the Guest OS",
          "name": "osnameforhypervisor",
          "type": "string"
        },
        {
          "description": "version of the hypervisor for mapping",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS mapping",
          "name": "id",
          "type": "string"
        },
        {
          "description": "is the mapping user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the hypervisor",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "standard display name for the Guest OS",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS type",
          "name": "ostypeid",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Reboots a system VM.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": true,
      "name": "rebootSystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,destroySystemVm,rebootSystemVm,scaleSystemVm,migrateSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,destroySystemVm,scaleSystemVm,migrateSystemVm",
      "response": [
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Import LDAP users",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "importLdapUsers",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": true,
          "type": "short"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "Specifies the domain to which the ldap users are to be imported. If no domain is specified, a domain will created using group parameter. If the group is also not specified, a domain name based on the OU information will be created. If no OU hierarchy exists, will be defaulted to ROOT domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies the group name from which the ldap users are to be imported. If no group is specified, all the users will be imported.",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listLdapUsers,searchLdap",
      "response": [
        {
          "description": "The user's firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "The user's lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "The user's principle",
          "name": "principal",
          "type": "string"
        },
        {
          "description": "The user's username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "The user's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The user's email",
          "name": "email",
          "type": "string"
        }
      ],
      "since": "4.3.0"
    },
    {
      "description": "Lists all available disk offerings.",
      "groupdescription": "Disk Offering",
      "groupname": "DiskOfferingService",
      "isasync": false,
      "name": "listDiskOfferings",
      "params": [
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "updateDiskOffering,listDiskOfferings,createDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the disk offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateDiskOffering,createDiskOffering",
      "response": [
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        }
      ]
    },
    {
      "description": "Update password of a host/pool on management server.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "updateHostPassword",
      "params": [
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster,listClusters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the username for the host/cluster",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,cancelHostMaintenance,addHost,updateHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the new password for the host/cluster",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "if the password should also be updated on the hosts",
          "length": 255,
          "name": "update_passwd_on_host",
          "required": false,
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all available networks.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listNetworks",
      "params": [
        {
          "description": "the network belongs to VPC",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list networks by restartRequired",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the zone ID of the network",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list networks by ACL (access control list) type. Supported values are account and domain",
          "length": 255,
          "name": "acltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks by ID",
          "length": 255,
          "name": "id",
          "related": "createNetwork,listNetworks,updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the type of the network. Supported values are: isolated and shared",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list networks by physical network id",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List networks by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,updateVPC,restartVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list networks available for VM deployment",
          "length": 255,
          "name": "canusefordeploy",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "type of the traffic",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if need to list only networks which support specifying IP ranges",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "listProjects,suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createNetwork,updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
      "response": [
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
          "name": "ipexclusionlist",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "List dedicated zones.",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": false,
      "name": "listDedicatedZones",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list dedicated zones by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "createAffinityGroup,listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the domain associated with the zone",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the account associated with the zone. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "dedicateZone",
      "response": [
        {
          "description": "the Dedication Affinity Group ID of the zone",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Zone is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain ID to which the Zone is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Name of the Zone",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates an existing cluster",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": false,
      "name": "updateCluster",
      "params": [
        {
          "description": "whether this cluster is managed by cloudstack",
          "length": 255,
          "name": "managedstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Cluster",
          "length": 255,
          "name": "id",
          "related": "addCluster,updateCluster,listClusters",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "hypervisor type of the cluster",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "hypervisor type of the cluster",
          "length": 255,
          "name": "clustertype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster name",
          "length": 255,
          "name": "clustername",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addCluster,listClusters",
      "response": [
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        },
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists storage providers.",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": false,
      "name": "listStorageProviders",
      "params": [
        {
          "description": "the type of storage provider: either primary or image",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the type of the storage provider: primary or image provider",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the name of the storage provider",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates firewall rule ",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "updateFirewallRule",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "listEgressFirewallRules,createFirewallRule,listFirewallRules,updateEgressFirewallRule,createEgressFirewallRule",
      "response": [
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Lists projects and provides detailed information for listed projects",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": false,
      "name": "listProjects",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list projects by project ID",
          "length": 255,
          "name": "id",
          "related": "listProjects,suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list projects by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "list projects by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list projects by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List projects by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
      "response": [
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates an account",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": false,
      "name": "createAccount",
      "params": [
        {
          "description": "Account UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "accountid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain for the account's networks",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": true,
          "type": "short"
        },
        {
          "description": "Unique username.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": true,
          "type": "string"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "Creates the user under the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lastname",
          "length": 255,
          "name": "lastname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "firstname",
          "length": 255,
          "name": "firstname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount,lockAccount",
      "response": [
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes account from the project",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": true,
      "name": "deleteAccountFromProject",
      "params": [
        {
          "description": "name of the account to be removed from the project",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the project to remove the account from",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all HA workers",
      "groupdescription": "CloudOps",
      "groupname": "CloudOpsService",
      "isasync": false,
      "name": "listHAWorkers",
      "params": [
        {
          "description": "the ID of the HA worker",
          "length": 255,
          "name": "id",
          "related": "listHAWorkers",
          "required": false,
          "type": "long"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Type of the HA worker",
          "name": "type",
          "type": "haworktype"
        },
        {
          "description": "Hypervisor this HA worker belongs too",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "State of the virtual machine this HA worker belongs too",
          "name": "virtualmachinestate",
          "type": "state"
        },
        {
          "description": "Previous state of the virtual machine this HA worker belongs too",
          "name": "state",
          "type": "state"
        },
        {
          "description": "ID of the domain this HA worker belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the HA worker",
          "name": "id",
          "type": "long"
        },
        {
          "description": "Date when the HA worker was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Name of the virtual machine this HA worker belongs too",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "Name of the domain this HA worker belongs too",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "Name of the management server this HA worker belongs too",
          "name": "managementservername",
          "type": "string"
        },
        {
          "description": "Date of the last step this HA worker has taken",
          "name": "taken",
          "type": "date"
        },
        {
          "description": "ID of the virtual machine this HA worker belongs too",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "Current step the HA worker is at",
          "name": "step",
          "type": "haworkstep"
        }
      ]
    },
    {
      "description": "List hypervisors",
      "groupdescription": "Hypervisor",
      "groupname": "HypervisorService",
      "isasync": false,
      "name": "listHypervisors",
      "params": [
        {
          "description": "the zone id for listing hypervisors.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Hypervisor name",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Revert VM from a vmsnapshot.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "revertToVMSnapshot",
      "params": [
        {
          "description": "The ID of the vm snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "createVMSnapshot,listVMSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {},
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates the information about Guest OS",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": true,
      "name": "updateGuestOs",
      "params": [
        {
          "description": "UUID of the Guest OS",
          "length": 255,
          "name": "id",
          "related": "listOsTypes,updateGuestOs,addGuestOs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Unique display name for Guest OS",
          "length": 255,
          "name": "osdisplayname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listOsTypes,addGuestOs",
      "response": [
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "is the guest OS user defined",
          "name": "isuserdefined",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Add a new guest OS type",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": true,
      "name": "addGuestOs",
      "params": [
        {
          "description": "Optional name for Guest OS",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Unique display name for Guest OS",
          "length": 255,
          "name": "osdisplayname",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of Guest OS category",
          "length": 255,
          "name": "oscategoryid",
          "related": "listOsCategories",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listOsTypes",
      "response": [
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "is the guest OS user defined",
          "name": "isuserdefined",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Lists host tags",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "listHostTags",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the host tag",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the host ID of the host tag",
          "name": "hostid",
          "type": "long"
        },
        {
          "description": "the name of the host tag",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes a Guest OS Mapping.",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": true,
      "name": "removeGuestOsMapping",
      "params": [
        {
          "description": "ID of the guest OS mapping",
          "length": 255,
          "name": "id",
          "related": "listGuestOsMapping,addGuestOsMapping",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Updates resource limits for an account or domain.",
      "groupdescription": "Limit",
      "groupname": "LimitService",
      "isasync": false,
      "name": "updateResourceLimit",
      "params": [
        {
          "description": "Update resource limits for all accounts in specified domain. If used with the account parameter, updates resource limits for a specified account in specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Type of resource to update. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create. 3 - Snapshot. Number of snapshots a user can create. 4 - Template. Number of templates that a user can register/create. 6 - Network. Number of guest network a user can create. 7 - VPC. Number of VPC a user can create. 8 - CPU. Total number of CPU cores a user can use. 9 - Memory. Total Memory (in MB) a user can use. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "integer"
        },
        {
          "description": "  Maximum resource limit.",
          "length": 255,
          "name": "max",
          "required": false,
          "type": "long"
        },
        {
          "description": "Update resource limits for project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Update resource for a specified account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listResourceLimits",
      "response": [
        {
          "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
          "name": "max",
          "type": "long"
        },
        {
          "description": "the account of the resource limit",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the resource limit",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the resource limit",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the resource limit",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the project name of the resource limit",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a static route",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "deleteStaticRoute",
      "params": [
        {
          "description": "the ID of the static route",
          "length": 255,
          "name": "id",
          "related": "listStaticRoutes,createStaticRoute",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Registers an existing ISO into the CloudStack Cloud.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": false,
      "name": "registerIso",
      "params": [
        {
          "description": "Image store UUID",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if ISO contains XS tools inorder to support dynamic scaling of VM CPU/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Register ISO for the project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone you wish to register the ISO to.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the URL to where the ISO is currently being hosted",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the display text of the ISO. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "the MD5 checksum value of this ISO",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this ISO. If the ISO is bootable this parameter needs to be passed",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the ISO or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "either 'LiveMigrate' or 'ShutdownAndStart' when performing hypervisor maintenance",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if you want this ISO to be featured",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional account name. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if this ISO is bootable. If not passed explicitly its assumed to be true",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if you want to register the ISO to be publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the ISO",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Release the dedication for the pod",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": true,
      "name": "releaseDedicatedPod",
      "params": [
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists affinity groups",
      "groupdescription": "Affinity Group",
      "groupname": "AffinityGroupService",
      "isasync": false,
      "name": "listAffinityGroups",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list the affinity group by the ID provided",
          "length": 255,
          "name": "id",
          "related": "createAffinityGroup,listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists affinity groups by virtual machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists affinity groups by type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists affinity groups by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createAffinityGroup",
      "response": [
        {
          "description": "the ID of the affinity group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account owning the affinity group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the affinity group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain ID of the affinity group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the affinity group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the affinity group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain name of the affinity group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project ID of the affinity group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "virtual machine IDs associated with this affinity group",
          "name": "virtualmachineIds",
          "type": "list"
        },
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        }
      ]
    },
    {
      "description": "Register a public key in a keypair under a certain name",
      "groupdescription": "SSH",
      "groupname": "SSHService",
      "isasync": false,
      "name": "registerSSHKeyPair",
      "params": [
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Public key material of the keypair",
          "length": 5120,
          "name": "publickey",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listSSHKeyPairs",
      "response": [
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the owner of the keypair",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the keypair owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain id of the keypair owner",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroys a l2tp/ipsec remote access vpn",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "deleteRemoteAccessVpn",
      "params": [
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates network ACL list",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "updateNetworkACLList",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "listNetworkACLLists,createNetworkACLList",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the list to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Restore a VM to original template/ISO or new template/ISO",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "restoreVirtualMachine",
      "params": [
        {
          "description": "an optional template Id to restore vm from the new template. This can be an ISO id in case of restore vm deployed using ISO",
          "length": 255,
          "name": "templateid",
          "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,restoreVirtualMachine,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,deployVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "Delete one or more events.",
      "groupdescription": "Event",
      "groupname": "EventService",
      "isasync": false,
      "name": "deleteEvents",
      "params": [
        {
          "description": "start date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "end date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "delete by event type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the events",
          "length": 255,
          "name": "ids",
          "related": "listEvents",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": " delete a nicira nvp device",
      "groupdescription": "Nicira NVP",
      "groupname": "NiciraNVPService",
      "isasync": true,
      "name": "deleteNiciraNvpDevice",
      "params": [
        {
          "description": "Nicira device ID",
          "length": 255,
          "name": "nvpdeviceid",
          "related": "addNiciraNvpDevice,listNiciraNvpDevices",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Nicira NVP devices",
      "groupdescription": "Nicira NVP",
      "groupname": "NiciraNVPService",
      "isasync": false,
      "name": "listNiciraNvpDevices",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "nicira nvp device ID",
          "length": 255,
          "name": "nvpdeviceid",
          "related": "addNiciraNvpDevice,listNiciraNvpDevices",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addNiciraNvpDevice",
      "response": [
        {
          "description": "the physical network to which this Nirica Nvp belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "niciradevicename",
          "type": "string"
        },
        {
          "description": "this L3 gateway service Uuid",
          "name": "l3gatewayserviceuuid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the transport zone Uuid",
          "name": "transportzoneuuid",
          "type": "string"
        },
        {
          "description": "the controller Ip address",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "device id of the Nicire Nvp",
          "name": "nvpdeviceid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an ISO file.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": true,
      "name": "deleteIso",
      "params": [
        {
          "description": "the ID of the zone of the ISO file. If not specified, the ISO will be deleted from all the zones",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all alerts.",
      "groupdescription": "Alert",
      "groupname": "AlertService",
      "isasync": false,
      "name": "listAlerts",
      "params": [
        {
          "description": "the ID of the alert",
          "length": 255,
          "name": "id",
          "related": "listAlerts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by alert type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by alert name",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.3",
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the alert",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the alert",
          "name": "id",
          "type": "string"
        },
        {
          "description": "description of the alert",
          "name": "description",
          "type": "string"
        },
        {
          "description": "One of the following alert types: MEMORY = 0, CPU = 1, STORAGE = 2, STORAGE_ALLOCATED = 3, PUBLIC_IP = 4, PRIVATE_IP = 5, HOST = 6, USERVM = 7, DOMAIN_ROUTER = 8, CONSOLE_PROXY = 9, ROUTING = 10: lost connection to default route (to the gateway), STORAGE_MISC = 11: lost connection to default route (to the gateway), USAGE_SERVER = 12: lost connection to default route (to the gateway), MANAGMENT_NODE = 13: lost connection to default route (to the gateway), DOMAIN_ROUTER_MIGRATE = 14, CONSOLE_PROXY_MIGRATE = 15, USERVM_MIGRATE = 16, VLAN = 17, SSVM = 18, USAGE_SERVER_RESULT = 19",
          "name": "type",
          "type": "short"
        },
        {
          "description": "the date and time the alert was sent",
          "name": "sent",
          "type": "date"
        }
      ]
    },
    {
      "description": "Updates a host.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "updateHost",
      "params": [
        {
          "description": "the ID of the host to update",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,cancelHostMaintenance,addHost,updateHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Change resource state of host, valid values are [Enable, Disable]. Operation may failed if host in states not allowing Enable/Disable",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of Os category to update the host with",
          "length": 255,
          "name": "oscategoryid",
          "related": "listOsCategories",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list of tags to be added to the host",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the new uri for the secondary storage: nfs://host/path",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        }
      ],
      "related": "reconnectHost,cancelHostMaintenance,addHost",
      "response": [
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            },
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "deployVirtualMachine",
      "params": [
        {
          "description": "an optional user generated name for the virtual machine",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "Deploy vm for the project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional group for the virtual machine",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "availability zone for the virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk offering for the virtual machine. If the template is of ISO format, the diskOfferingId is for the root disk volume. Otherwise this parameter is used to indicate the offering for the data disk volume. If the templateId parameter passed is from a Template object, the diskOfferingId refers to a DATA Disk Volume created. If the templateId parameter passed is from an ISO object, the diskOfferingId refers to a ROOT Disk Volume created.",
          "length": 255,
          "name": "diskofferingid",
          "related": "updateDiskOffering,createDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if start vm after creating; defaulted to true if not specified",
          "length": 255,
          "name": "startvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ipv6 address for default vm's network",
          "length": 255,
          "name": "ip6address",
          "required": false,
          "type": "string"
        },
        {
          "description": "ip to network mapping. Can't be specified with networkIds parameter. Example: iptonetworklist[0].ip=10.10.10.11&iptonetworklist[0].ipv6=fc00:1234:5678::abcd&iptonetworklist[0].networkid=uuid - requests to use ip 10.10.10.11 in network id=uuid",
          "length": 255,
          "name": "iptonetworklist",
          "required": false,
          "type": "map"
        },
        {
          "description": "the MAC-Address for default vm's network",
          "length": 255,
          "name": "macaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list of network ids used by virtual machine. Can't be specified with ipToNetworkList parameter",
          "length": 255,
          "name": "networkids",
          "related": "createNetwork,updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "list"
        },
        {
          "description": "Timeout (in ms) to for the boot menu",
          "length": 255,
          "name": "bootmenutimeout",
          "required": false,
          "type": "long"
        },
        {
          "description": "Optional field to resize root disk on deploy. Value is in GB. Only applies to template-based deployments. Analogous to details[0].rootdisksize, which takes precedence over this parameter if both are provided",
          "length": 255,
          "name": "rootdisksize",
          "required": false,
          "since": "4.4",
          "type": "long"
        },
        {
          "description": "the ip address for default vm's network",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "used to specify the custom parameters.",
          "length": 255,
          "name": "details",
          "required": false,
          "since": "4.3",
          "type": "map"
        },
        {
          "description": "host name for the virtual machine",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Deployment planner to use for vm allocation. Available to ROOT admin only",
          "length": 255,
          "name": "deploymentplanner",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vm to the end user or not.",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "since": "4.2",
          "type": "boolean"
        },
        {
          "description": "either 'LiveMigrate' or 'ShutdownAndStart' when performing hypervisor maintenance",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine.Mutually exclusive with affinitygroupids parameter",
          "length": 255,
          "name": "affinitygroupnames",
          "related": "createAffinityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "name of the ssh key pair used to login to the virtual machine",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "the disk controller to use. Either 'IDE', 'VIRTIO' or 'SCSI'",
          "length": 255,
          "name": "diskcontroller",
          "required": false,
          "type": "string"
        },
        {
          "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,cancelHostMaintenance,addHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Mutually exclusive with affinitygroupnames parameter",
          "length": 255,
          "name": "affinitygroupids",
          "related": "createAffinityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "the arbitrary size for the DATADISK volume. Mutually exclusive with diskOfferingId",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "an optional keyboard device type for the virtual machine. valid value can be one of de,de-ch,es,fi,fr,fr-be,fr-ch,is,it,jp,nl-be,no,pt,uk,us",
          "length": 255,
          "name": "keyboard",
          "required": false,
          "type": "string"
        },
        {
          "description": "the hypervisor on which to deploy the virtual machine. The parameter is required and respected only when hypervisor info is not set on the ISO/Template passed to the call",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.",
          "length": 32768,
          "name": "userdata",
          "required": false,
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        }
      ],
      "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Upgrades router to use newer template",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "upgradeRouterTemplate",
      "params": [
        {
          "description": "upgrades all routers owned by the specified account",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "upgrades all routers within the specified pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers within the specified cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,listClusters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers within the specified zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades router with the specified Id",
          "length": 255,
          "name": "id",
          "related": "startRouter,changeServiceForRouter,rebootRouter,stopRouter,destroyRouter,listRouters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers owned by the specified domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "The UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The current status of the latest async job acting on this object, should be 0 for PENDING",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {}
      ]
    },
    {
      "description": "Creates a egress firewall rule for a given network ",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "createEgressFirewallRule",
      "params": [
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "type of firewallrule: system/user",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the network id of the port forwarding rule",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the starting port of firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listEgressFirewallRules,createFirewallRule,listFirewallRules,updateEgressFirewallRule",
      "response": [
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Extracts volume",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "extractVolume",
      "params": [
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the zone where the volume is located",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the url to which the volume would be extracted",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,resizeVolume,uploadVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,listVolumes,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "extractTemplate,extractIso",
      "response": [
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {},
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all VLAN IP ranges.",
      "groupdescription": "VLAN",
      "groupname": "VLANService",
      "isasync": false,
      "name": "listVlanIpRanges",
      "params": [
        {
          "description": "the domain ID with which the VLAN IP range is associated.  If used with the account parameter, returns all VLAN IP ranges for that account in the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account with which the VLAN IP range is associated. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "physical network id of the VLAN IP range",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Pod ID of the VLAN IP range",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "createVlanIpRange,dedicatePublicIpRange,listVlanIpRanges",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "network id of the VLAN IP range",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if VLAN is of Virtual type, false if Direct",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID or VID of the VLAN. Default is an \"untagged\" VLAN.",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,updateZone,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "project who will own the VLAN",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createVlanIpRange,dedicatePublicIpRange",
      "response": [
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Cancels host maintenance.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": true,
      "name": "cancelHostMaintenance",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,cancelHostMaintenance,addHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "reconnectHost,addHost",
      "response": [
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates a Zone.",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": false,
      "name": "updateZone",
      "params": [
        {
          "description": "the dns search order list",
          "length": 255,
          "name": "dnssearchorder",
          "required": false,
          "type": "list"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "length": 255,
          "name": "dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "id",
          "related": "listZones,listZones,updateZone,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the second internal DNS for the Zone",
          "length": 255,
          "name": "internaldns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "updates a private zone to public if set, but not vice-versa",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the details for the Zone",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the second DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "length": 255,
          "name": "dhcpprovider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the Zone",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "length": 255,
          "name": "internaldns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "length": 255,
          "name": "guestcidraddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone; empty string will update domain with NULL value",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "length": 255,
          "name": "dns2",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listZones,listZones,createZone",
      "response": [
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {},
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists VPC offerings",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": false,
      "name": "listVPCOfferings",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list VPC offerings by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC offerings supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC offerings by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC offerings by id",
          "length": 255,
          "name": "id",
          "related": "updateVPCOffering,listVPCOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list VPC offerings by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if need to list only default VPC offerings. Default value is false",
          "length": 255,
          "name": "isdefault",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "updateVPCOffering",
      "response": [
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "The primary system compute offering name used for the virtual router",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "The secondary system compute offering name used for the virtual router",
          "name": "secondaryserviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "The primary system compute offering id used for the virtual router",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "The secondary system compute offering id used for the virtual router",
          "name": "secondaryserviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Uploads a data disk.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "uploadVolume",
      "params": [
        {
          "description": "the MD5 checksum value of this volume",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the volume",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Image store uuid",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the volume. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "Upload volume for the project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone the volume is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk offering. This must be a custom sized offering since during uploadVolume volume size is unknown.",
          "length": 255,
          "name": "diskofferingid",
          "related": "updateDiskOffering,createDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL of where the volume is hosted. Possible URL include http:// and https://",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        }
      ],
      "related": "attachVolume,resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,listVolumes,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists project's accounts",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": false,
      "name": "listProjectAccounts",
      "params": [
        {
          "description": "list accounts of the project by role",
          "length": 255,
          "name": "role",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,listProjectAccounts,createProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "list accounts of the project by account name",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "suspendProject,activateProject,updateProject,createProject",
      "response": [
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists storage tags",
      "groupdescription": "Resource tags",
      "groupname": "ResourcetagsService",
      "isasync": false,
      "name": "listStorageTags",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the storage tag",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the storage tag",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the pool ID of the storage tag",
          "name": "poolid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Creates a disk offering.",
      "groupdescription": "Disk Offering",
      "groupname": "DiskOfferingService",
      "isasync": false,
      "name": "createDiskOffering",
      "params": [
        {
          "description": "whether disk offering iops is custom or not",
          "length": 255,
          "name": "customizediops",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "length": 255,
          "name": "hypervisorsnapshotreserve",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to display the offering to the end user or not.",
          "length": 255,
          "name": "displayoffering",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "whether disk offering size is custom or not",
          "length": 255,
          "name": "customized",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "size of the disk offering in GB (1GB = 1,073,741,824 bytes)",
          "length": 255,
          "name": "disksize",
          "required": false,
          "type": "long"
        },
        {
          "description": "max iops of the disk offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "alternate display text of the disk offering",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the storage type of the disk offering. Values are local and shared.",
          "length": 255,
          "name": "storagetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "length": 255,
          "name": "provisioningtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "tags for the disk offering",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain, null for public offerings",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "min iops of the disk offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "name of the disk offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriterate",
          "required": false,
          "type": "long"
        }
      ],
      "related": "updateDiskOffering",
      "response": [
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all volumes.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": false,
      "name": "listVolumes",
      "params": [
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list volumes on specified host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the pod id the disk volume belongs to",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the pod id the disk volume belongs to",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,listVolumes,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the storage pool, available to ROOT admin only",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the storage pool, available to ROOT admin only",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "the type of disk volume",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list volumes by disk offering",
          "length": 255,
          "name": "diskofferingid",
          "related": "updateDiskOffering",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,createProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        }
      ]
    },
    {
      "description": "List template visibility and all accounts that have permissions to view this template.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "listTemplatePermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listTemplatePermissions,listIsoPermissions,listIsoPermissions,listTemplatePermissions",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsoPermissions,listIsoPermissions,listTemplatePermissions",
      "response": [
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of accounts the template is available for",
          "name": "account",
          "type": "list"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of projects the template is available for",
          "name": "projectids",
          "type": "list"
        }
      ]
    },
    {
      "description": "Creates a load balancer health check policy",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "createLBHealthCheckPolicy",
      "params": [
        {
          "description": "Time to wait when receiving a response from the health check (2sec - 60 sec)",
          "length": 255,
          "name": "responsetimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "HTTP ping path",
          "length": 255,
          "name": "pingpath",
          "required": false,
          "type": "string"
        },
        {
          "description": "Number of consecutive health check failures before declaring an instance unhealthy",
          "length": 255,
          "name": "unhealthythreshold",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Number of consecutive health check success before declaring an instance healthy",
          "length": 255,
          "name": "healthythreshold",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "Amount of time between health checks (1 sec - 20940 sec)",
          "length": 255,
          "name": "intervaltime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the description of the load balancer health check policy",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listLBHealthCheckPolicies,updateLBHealthCheckPolicy",
      "response": [
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            }
          ],
          "type": "list"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Locks a user account",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "lockUser",
      "params": [
        {
          "description": "Locks user by user ID.",
          "length": 255,
          "name": "id",
          "related": "getUser,updateUser,enableUser,createUser,disableUser,lockUser,listUsers",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "getUser,updateUser,enableUser,createUser,disableUser,listUsers",
      "response": [
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "createNetwork",
      "params": [
        {
          "description": "the CIDR of the network.",
          "length": 255,
          "name": "cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the network. for shared networks and isolated networks when it belongs to VPC",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the physical network ID the network belongs to",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Defines whether to allow subdomains to use networks dedicated to their parent domain(s). Should be used with aclType=Domain, defaulted to allow.subdomain.network.access global config if not specified",
          "length": 255,
          "name": "subdomainaccess",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "IP exclusion list for private networks",
          "length": 255,
          "name": "ipexclusionlist",
          "required": false,
          "type": "string"
        },
        {
          "description": "the isolated private VLAN for this network",
          "length": 255,
          "name": "isolatedpvlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "network domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask of the network. for shared networks and isolated networks when it belongs to VPC",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "startipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the IPv6 network. Required for Shared networks",
          "length": 255,
          "name": "ip6gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IP address in the network IP range. If not specified, will be defaulted to startIP",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "endipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network ACL ID associated for the network",
          "length": 255,
          "name": "aclid",
          "related": "listNetworkACLLists,createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the network",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the zone ID for the network",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the beginning IP address in the network IP range",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "The first DNS server of the network",
          "length": 255,
          "name": "dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "The second DNS server of the network",
          "length": 255,
          "name": "dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "The VLAN of the network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the SSH key",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the VPC network belongs to",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,updateVPC,restartVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "account that will own the network",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the network",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a network",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Access control type; supported values are account and domain. In 3.0 all shared networks should have aclType=Domain, and all isolated networks - Account. Account means that only the account owner can use the network, domain - all accounts in the domain can use the network",
          "length": 255,
          "name": "acltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the CIDR of IPv6 network, must be at least /64",
          "length": 255,
          "name": "ip6cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "listNetworkOfferings,updateNetworkOffering,createNetworkOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
      "response": [
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
          "name": "ipexclusionlist",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available network offerings.",
      "groupdescription": "Network Offering",
      "groupname": "NetworkOfferingService",
      "isasync": false,
      "name": "listNetworkOfferings",
      "params": [
        {
          "description": "list network offerings by guest type: shared or isolated",
          "length": 255,
          "name": "guestiptype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network offerings by ID",
          "length": 255,
          "name": "id",
          "related": "listNetworkOfferings,updateNetworkOffering,createNetworkOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if need to list only default network offerings. Default value is false",
          "length": 255,
          "name": "isdefault",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if need to list only netwok offerings where source NAT is supported, false otherwise",
          "length": 255,
          "name": "sourcenatsupported",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings available for network creation in specific zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the availability of network offering. Default value is required",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "the tags for the network offering.",
          "length": 255,
          "name": "specifyvlan",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the network offering can be used only for network creation inside the VPC",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if offering has tags specified",
          "length": 255,
          "name": "istagged",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings by tags",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network offerings supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "list by traffic type",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if need to list only network offerings which support specifying ip ranges",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the network. Pass this in if you want to see the available network offering that a network can be changed to.",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network offerings by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateNetworkOffering,createNetworkOffering",
      "response": [
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary service offering used by virtual router provider",
          "name": "secondaryserviceofferingid",
          "type": "string"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        },
        {
          "description": "the name of the secondary service offering used by virtual router provider",
          "name": "secondaryserviceofferingname",
          "type": "string"
        },
        {
          "description": "true if network offering supports network that span multiple zones",
          "name": "supportsstrechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering used by virtual router provider",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists load balancer health check policies.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "listLBHealthCheckPolicies",
      "params": [
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the health check policy",
          "length": 255,
          "name": "id",
          "related": "listLBHealthCheckPolicies,updateLBHealthCheckPolicy",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateLBHealthCheckPolicy",
      "response": [
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists dedicated pods.",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": false,
      "name": "listDedicatedPods",
      "params": [
        {
          "description": "list dedicated pods by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "createAffinityGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the domain associated with the pod",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the account associated with the pod. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "dedicatePod",
      "response": [
        {
          "description": "the Dedication Affinity Group ID of the pod",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID to which the Pod is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Pod is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the Name of the Pod",
          "name": "podname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroyes a system virtual machine.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": true,
      "name": "destroySystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,destroySystemVm,scaleSystemVm,migrateSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,scaleSystemVm,migrateSystemVm",
      "response": [
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists VPCs",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": false,
      "name": "listVPCs",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list VPCs by restartRequired option",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list VPCs by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list VPC supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list VPC by id",
          "length": 255,
          "name": "id",
          "related": "createVPC,listVPCs,updateVPC,updateVPC,restartVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by ID of the VPC offering",
          "length": 255,
          "name": "vpcofferingid",
          "related": "updateVPCOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
          "length": 255,
          "name": "cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by name of the VPC",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVPC,updateVPC,updateVPC,restartVPC,createVPC,listVPCs",
      "response": [
        {
          "description": "Comma separated list of IP addresses to configure as syslog servers on the VPC to forward IP tables logging",
          "name": "syslogserverlist",
          "type": "string"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
              "name": "zonesnetworkspans",
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    },
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the ACL applied to this IP",
              "name": "aclname",
              "type": "string"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
              "name": "ipexclusionlist",
              "type": "string"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "true if network can span multiple zones",
              "name": "strechedl2subnet",
              "type": "boolean"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "Source Nat CIDR list for used to allow other CIDRs to be source NATted by the VPC over the public interface",
          "name": "sourcenatlist",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "display text of the vpc offering the vpc is created from",
          "name": "vpcofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "name of the vpc offering the vpc is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Archive one or more events.",
      "groupdescription": "Event",
      "groupname": "EventService",
      "isasync": false,
      "name": "archiveEvents",
      "params": [
        {
          "description": "end date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "archive by event type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the events",
          "length": 255,
          "name": "ids",
          "related": "listEvents",
          "required": false,
          "type": "list"
        },
        {
          "description": "start date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attempts Migration of a VM with its volumes to a different host",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "migrateVirtualMachineWithVolume",
      "params": [
        {
          "description": "Storage to pool mapping. This parameter specifies the mapping between a volume and a pool where you want to migrate that volume. Format of this parameter: migrateto[volume-index].volume=<uuid>&migrateto[volume-index].pool=<uuid>Where, [volume-index] indicates the index to identify the volume that you want to migrate, volume=<uuid> indicates the UUID of the volume that you want to migrate, and pool=<uuid> indicates the UUID of the pool where you want to migrate the volume. Example: migrateto[0].volume=<71f43cd6-69b0-4d3b-9fbc-67f50963d60b>&migrateto[0].pool=<a382f181-3d2b-4413-b92d-b8931befa7e1>&migrateto[1].volume=<88de0173-55c0-4c1c-a269-83d0279eeedf>&migrateto[1].pool=<95d6e97c-6766-4d67-9a30-c449c15011d1>&migrateto[2].volume=<1b331390-59f2-4796-9993-bf11c6e76225>&migrateto[2].pool=<41fdb564-9d3b-447d-88ed-7628f7640cbc>",
          "length": 255,
          "name": "migrateto",
          "required": false,
          "type": "map"
        },
        {
          "description": "Destination Host ID to migrate VM to.",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachineWithVolume,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a secondary staging store .",
      "groupdescription": "Image Store",
      "groupname": "ImageStoreService",
      "isasync": false,
      "name": "deleteSecondaryStagingStore",
      "params": [
        {
          "description": "the staging store ID",
          "length": 255,
          "name": "id",
          "related": "addSecondaryStorage,listImageStores,addImageStore,listSecondaryStagingStores,createSecondaryStagingStore",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Adds a network device of one of the following types: ExternalDhcp, ExternalLoadBalancer",
      "groupdescription": "Network Device",
      "groupname": "NetworkDeviceService",
      "isasync": false,
      "name": "addNetworkDevice",
      "params": [
        {
          "description": "parameters for network device",
          "length": 255,
          "name": "networkdeviceparameterlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "Network device type, now supports ExternalDhcp, JuniperSRXFirewall, PaloAltoFirewall",
          "length": 255,
          "name": "networkdevicetype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listNetworkDevice",
      "response": [
        {
          "description": "the ID of the network device",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Scale the service offering for a system vm (console proxy or secondary storage). The system vm must be in a \"Stopped\" state for this command to take effect.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": true,
      "name": "scaleSystemVm",
      "params": [
        {
          "description": "name value pairs of custom parameters for cpu, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "The ID of the system vm",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,scaleSystemVm,migrateSystemVm",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the service offering ID to apply to the system vm",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,migrateSystemVm",
      "response": [
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a user account",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "updateUser",
      "params": [
        {
          "description": "first name",
          "length": 255,
          "name": "firstname",
          "required": false,
          "type": "string"
        },
        {
          "description": "The secret key for the user. Must be specified with userSecretKey",
          "length": 255,
          "name": "usersecretkey",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "The API key for the user. Must be specified with userSecretKey",
          "length": 255,
          "name": "userapikey",
          "required": false,
          "type": "string"
        },
        {
          "description": "Clear text password (default hashed to SHA256SALT). If you wish to use any other hasing algorithm, you would need to write a custom authentication adapter",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "Unique username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "User uuid",
          "length": 255,
          "name": "id",
          "related": "getUser,updateUser,enableUser,createUser,disableUser,listUsers",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "last name",
          "length": 255,
          "name": "lastname",
          "required": false,
          "type": "string"
        }
      ],
      "related": "getUser,enableUser,createUser,disableUser,listUsers",
      "response": [
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Restarts a VPC",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "restartVPC",
      "params": [
        {
          "description": "the id of the VPC",
          "length": 255,
          "name": "id",
          "related": "createVPC,updateVPC,updateVPC,restartVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Cleanup old network elements (defaults to true)",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createVPC,updateVPC,updateVPC,createVPC,listVPCs",
      "response": [
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Source Nat CIDR list for used to allow other CIDRs to be source NATted by the VPC over the public interface",
          "name": "sourcenatlist",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the name of the ACL applied to this IP",
              "name": "aclname",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    }
                  ],
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
              "name": "zonesnetworkspans",
              "type": "set"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
              "name": "ipexclusionlist",
              "type": "string"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "true if network can span multiple zones",
              "name": "strechedl2subnet",
              "type": "boolean"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Comma separated list of IP addresses to configure as syslog servers on the VPC to forward IP tables logging",
          "name": "syslogserverlist",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "name of the vpc offering the vpc is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "display text of the vpc offering the vpc is created from",
          "name": "vpcofferingdisplaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes a certificate from a load balancer rule",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "removeCertFromLoadBalancer",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attaches a disk volume to a virtual machine.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "attachVolume",
      "params": [
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the device to map the volume to within the guest OS. If no deviceId is passed in, the next available deviceId will be chosen. Possible values for a Linux OS are:* 0 - /dev/xvda* 1 - /dev/xvdb* 2 - /dev/xvdc* 4 - /dev/xvde* 5 - /dev/xvdf* 6 - /dev/xvdg* 7 - /dev/xvdh* 8 - /dev/xvdi* 9 - /dev/xvdj",
          "length": 255,
          "name": "deviceid",
          "required": false,
          "type": "long"
        },
        {
          "description": "    the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a new host.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "addHost",
      "params": [
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Allocation state of this Host for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster name for the host",
          "length": 255,
          "name": "clustername",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster ID for the host",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,listClusters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "hypervisor type of the host",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "the host URL",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Zone ID for the host",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the password for the host",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "list of tags to be added to the host",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the username for the host",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        }
      ],
      "related": "reconnectHost",
      "response": [
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        }
      ]
    },
    {
      "description": "Update site to site vpn customer gateway",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "updateVpnCustomerGateway",
      "params": [
        {
          "description": "IPsec Preshared-Key of the customer gateway. Cannot contain newline or double quotes.",
          "length": 255,
          "name": "ipsecpsk",
          "required": true,
          "type": "string"
        },
        {
          "description": "If DPD is enabled for VPN connection",
          "length": 255,
          "name": "dpd",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "ESP policy of the customer gateway",
          "length": 255,
          "name": "esppolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "name of this customer gateway",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "esplifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "IKE policy of the customer gateway",
          "length": 255,
          "name": "ikepolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "listVpnCustomerGateways,updateVpnCustomerGateway,createVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Force encapsulation for Nat Traversal",
          "length": 255,
          "name": "forceencap",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "public ip address id of the customer gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "length": 255,
          "name": "cidrlist",
          "required": true,
          "type": "list"
        },
        {
          "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account associated with the gateway. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "ikelifetime",
          "required": false,
          "type": "long"
        }
      ],
      "related": "listVpnCustomerGateways,createVpnCustomerGateway",
      "response": [
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        }
      ]
    },
    {
      "description": "Updates a project",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "updateProject",
      "params": [
        {
          "description": "new Admin account for the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the project to be modified",
          "length": 255,
          "name": "id",
          "related": "suspendProject,activateProject,updateProject,createProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "display text of the project",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        }
      ],
      "related": "suspendProject,activateProject,createProject",
      "response": [
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a load balancer stickiness policy.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "deleteLBStickinessPolicy",
      "params": [
        {
          "description": "the ID of the LB stickiness policy",
          "length": 255,
          "name": "id",
          "related": "updateLBStickinessPolicy,listLBStickinessPolicies,createLBStickinessPolicy",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "This command allows a user to register for the developer API, returning a secret key and an API key. This request is made through the integration API port, so it is a privileged command and must be made on behalf of a user. It is up to the implementer just how the username and password are entered, and then how that translates to an integration API request. Both secret key and API key should be returned to the user",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "registerUserKeys",
      "params": [
        {
          "description": "User id",
          "length": 255,
          "name": "id",
          "related": "getUser,enableUser,createUser,disableUser,listUsers",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the api key of the registered user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the secret key of the registered user",
          "name": "secretkey",
          "type": "string"
        }
      ]
    },
    {
      "description": "This deprecated function used to locks an account. Look for the API DisableAccount instead",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": false,
      "name": "lockAccount",
      "params": [
        {
          "description": "Locks the specified account.",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        },
        {
          "description": "Locks the specified account on this domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
      "response": [
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a router.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": true,
      "name": "stopRouter",
      "params": [
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "startRouter,changeServiceForRouter,rebootRouter,stopRouter,destroyRouter,listRouters",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Force stop the VM. The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "startRouter,changeServiceForRouter,rebootRouter,destroyRouter,listRouters",
      "response": [
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists user accounts",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "listUsers",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List users by account type. Valid types include admin, domain-admin, read-only-admin, or user.",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "long"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List users by state of the user account.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List user by ID.",
          "length": 255,
          "name": "id",
          "related": "getUser,enableUser,createUser,disableUser,listUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List user by the username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "getUser,enableUser,createUser,disableUser",
      "response": [
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists site to site vpn connection gateways",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": false,
      "name": "listVpnConnections",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "id of the vpn connection",
          "length": 255,
          "name": "id",
          "related": "listVpnConnections,updateVpnConnection,createVpnConnection,resetVpnConnection",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateVpnConnection,createVpnConnection,resetVpnConnection",
      "response": [
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists clusters.",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": false,
      "name": "listClusters",
      "params": [
        {
          "description": "lists clusters by allocation state",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "length": 255,
          "name": "managedstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "flag to display the capacity of the clusters",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists clusters by Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists clusters by the cluster name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by cluster type",
          "length": 255,
          "name": "clustertype",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by Pod ID",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by the cluster ID",
          "length": 255,
          "name": "id",
          "related": "addCluster,listClusters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists clusters by hypervisor type",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addCluster",
      "response": [
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        },
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        },
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Lists resource limits.",
      "groupdescription": "Limit",
      "groupname": "LimitService",
      "isasync": false,
      "name": "listResourceLimits",
      "params": [
        {
          "description": "Type of resource. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses an account can own. 2 - Volume. Number of disk volumes an account can own. 3 - Snapshot. Number of snapshots an account can own. 4 - Template. Number of templates an account can register/create. 5 - Project. Number of projects an account can own. 6 - Network. Number of networks an account can own. 7 - VPC. Number of VPC an account can own. 8 - CPU. Number of CPU an account can allocate for his resources. 9 - Memory. Amount of RAM an account can allocate for his resources. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists resource limits by ID.",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
          "name": "max",
          "type": "long"
        },
        {
          "description": "the project name of the resource limit",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the resource limit",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the resource limit",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account of the resource limit",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the resource limit",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes project invitation",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "deleteProjectInvitation",
      "params": [
        {
          "description": "id of the invitation",
          "length": 255,
          "name": "id",
          "related": "listProjectInvitations",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists project invitations and provides detailed information for listed invitations",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": false,
      "name": "listProjectInvitations",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "if true, list only active invitations - having Pending state and ones that are not timed out yet",
          "length": 255,
          "name": "activeonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list invitations by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list invitations by id",
          "length": 255,
          "name": "id",
          "related": "listProjectInvitations",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by project id",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the invitation state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the email the invitation was sent to",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the id of the invitation",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all egress firewall rules for network ID.",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": false,
      "name": "listEgressFirewallRules",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of IP address of the firewall services",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the network ID for the egress firewall services",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createFirewallRule,listFirewallRules,updateEgressFirewallRule",
      "response": [
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Disables a user account",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": true,
      "name": "disableUser",
      "params": [
        {
          "description": "Disables user by user ID.",
          "length": 255,
          "name": "id",
          "related": "getUser,enableUser,createUser,disableUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "getUser,enableUser,createUser",
      "response": [
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a region",
      "groupdescription": "Region",
      "groupname": "RegionService",
      "isasync": false,
      "name": "updateRegion",
      "params": [
        {
          "description": "updates region with this name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Id of region to update",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "integer"
        },
        {
          "description": "updates region with this end point",
          "length": 255,
          "name": "endpoint",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addRegion,listRegions",
      "response": [
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        },
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes traffic type of a physical network",
      "groupdescription": "Usage",
      "groupname": "UsageService",
      "isasync": true,
      "name": "deleteTrafficType",
      "params": [
        {
          "description": "traffic type id",
          "length": 255,
          "name": "id",
          "related": "addTrafficType",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all available ISO files.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": false,
      "name": "listIsos",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list all ISOs by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if this ISO is ready to be deployed",
          "length": 255,
          "name": "isready",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
          "length": 255,
          "name": "isofilter",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list ISO by ID",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,listIsos,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "show removed ISOs as well",
          "length": 255,
          "name": "showremoved",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the ISO is publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all LDAP configurations",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "listLdapConfigurations",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Hostname",
          "length": 255,
          "name": "hostname",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Port",
          "length": 255,
          "name": "port",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "deleteLdapConfiguration,addLdapConfiguration",
      "response": [
        {
          "description": "hostname",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "port",
          "name": "port",
          "type": "int"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists secondary staging stores.",
      "groupdescription": "Image Store",
      "groupname": "ImageStoreService",
      "isasync": false,
      "name": "listSecondaryStagingStores",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the staging store",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the staging store protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the staging store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the staging store",
          "length": 255,
          "name": "id",
          "related": "addSecondaryStorage,listImageStores,addImageStore,listSecondaryStagingStores,createSecondaryStagingStore",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the staging store provider",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addSecondaryStorage,listImageStores,addImageStore,createSecondaryStagingStore",
      "response": [
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the details of the image store",
          "name": "details",
          "type": "set"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Creates a l2tp/ipsec remote access vpn",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "createRemoteAccessVpn",
      "params": [
        {
          "description": "the range of ip addresses to allocate to vpn clients. The first ip in the range will be taken by the vpn server",
          "length": 255,
          "name": "iprange",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitely. Has value true by default",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for the VPN. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "an optional account for the VPN. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateRemoteAccessVpn,listRemoteAccessVpns",
      "response": [
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "is vpn for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        }
      ]
    },
    {
      "description": "Changes the service offering for a virtual machine. The virtual machine must be in a \"Stopped\" state for this command to take effect.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": false,
      "name": "changeServiceForVirtualMachine",
      "params": [
        {
          "description": "name value pairs of custom parameters for cpu, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the service offering ID to apply to the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,changeServiceForVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {},
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Starts a router.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": true,
      "name": "startRouter",
      "params": [
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "startRouter,changeServiceForRouter,rebootRouter,destroyRouter,listRouters",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "changeServiceForRouter,rebootRouter,destroyRouter,listRouters",
      "response": [
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        }
      ]
    },
    {
      "description": "List all public, private, and privileged templates.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "listTemplates",
      "params": [
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the template name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
          "length": 255,
          "name": "templatefilter",
          "required": true,
          "type": "string"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateIso,listTemplates,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list templates by zoneId",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "show removed templates as well",
          "length": 255,
          "name": "showremoved",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "related": "registerTemplate,updateIso,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available OS mappings for given hypervisor",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": false,
      "name": "listGuestOsMapping",
      "params": [
        {
          "description": "list mapping by Guest OS Type UUID",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list Guest OS mapping by hypervisor",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Guest OS mapping by hypervisor version. Must be used with hypervisor parameter",
          "length": 255,
          "name": "hypervisorversion",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list mapping by its UUID",
          "length": 255,
          "name": "id",
          "related": "listGuestOsMapping,addGuestOsMapping",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addGuestOsMapping",
      "response": [
        {
          "description": "hypervisor specific name for the Guest OS",
          "name": "osnameforhypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS type",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "standard display name for the Guest OS",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "is the mapping user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS mapping",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hypervisor",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "version of the hypervisor for mapping",
          "name": "hypervisorversion",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Lists zones",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": false,
      "name": "listZones",
      "params": [
        {
          "description": "the ID of the domain associated with the zone",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if you want to retrieve all available Zones. False if you only want to return the Zones from which you have at least one VM. Default is false.",
          "length": 255,
          "name": "available",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "id",
          "related": "listZones,listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the capacity of the zones",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List zones by resource tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "since": "4.3",
          "type": "map"
        },
        {
          "description": "the name of the zone",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network type of the zone that the virtual machine belongs to",
          "length": 255,
          "name": "networktype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listZones,createZone",
      "response": [
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {},
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists remote access vpns",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": false,
      "name": "listRemoteAccessVpns",
      "params": [
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list remote access VPNs for ceratin network",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists remote access vpn rule with the specified ID",
          "length": 255,
          "name": "id",
          "related": "updateRemoteAccessVpn,listRemoteAccessVpns",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "updateRemoteAccessVpn",
      "response": [
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "is vpn for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists physical networks",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listPhysicalNetworks",
      "params": [
        {
          "description": "search by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list physical network by id",
          "length": 255,
          "name": "id",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Zone ID for the physical network",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createPhysicalNetwork,updatePhysicalNetwork",
      "response": [
        {
          "description": "the uuid of the physical network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "comma separated tag",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "zone id of the physical network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "isolation methods",
          "name": "isolationmethods",
          "type": "string"
        },
        {
          "description": "state of the physical network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the vlan of the physical network",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "Broadcast domain range of the physical network",
          "name": "broadcastdomainrange",
          "type": "string"
        },
        {
          "description": "the speed of the physical network",
          "name": "networkspeed",
          "type": "string"
        },
        {
          "description": "name of the physical network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain id of the physical network owner",
          "name": "domainid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a network ACL",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "deleteNetworkACLList",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "listNetworkACLLists,createNetworkACLList",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all firewall rules for an IP address.",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": false,
      "name": "listFirewallRules",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of IP address of the firewall services",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list firewall rules for certain network",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createFirewallRule,updateEgressFirewallRule",
      "response": [
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes secondary IP from the NIC.",
      "groupdescription": "Nic",
      "groupname": "NicService",
      "isasync": true,
      "name": "removeIpFromNic",
      "params": [
        {
          "description": "the ID of the secondary ip address to nic",
          "length": 255,
          "name": "id",
          "related": "addIpToNic",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Cleanups VM reservations in the database.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "cleanVMReservations",
      "params": [],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Extracts an ISO",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": true,
      "name": "extractIso",
      "params": [
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateIso,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone where the ISO is originally located",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the URL to which the ISO would be extracted",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        }
      ],
      "related": "extractTemplate",
      "response": [
        {},
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        }
      ]
    },
    {
      "description": "Releases a Public IP range back to the system pool",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "releasePublicIpRange",
      "params": [
        {
          "description": "the id of the Public IP range",
          "length": 255,
          "name": "id",
          "related": "createVlanIpRange,dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates an affinity/anti-affinity group",
      "groupdescription": "Affinity Group",
      "groupname": "AffinityGroupService",
      "isasync": true,
      "name": "createAffinityGroup",
      "params": [
        {
          "description": "name of the affinity group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an account for the affinity group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "domainId of the account owning the affinity group",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "create affinity group for project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "optional description of the affinity group",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "Type of the affinity group from the available affinity/anti-affinity group types",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name of the affinity group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the description of the affinity group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the affinity group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID of the affinity group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project ID of the affinity group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the affinity group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "virtual machine IDs associated with this affinity group",
          "name": "virtualmachineIds",
          "type": "list"
        },
        {
          "description": "the project name of the affinity group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the account owning the affinity group",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "create secondary staging store.",
      "groupdescription": "Image Store",
      "groupname": "ImageStoreService",
      "isasync": false,
      "name": "createSecondaryStagingStore",
      "params": [
        {
          "description": "the Zone ID for the staging store",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the details for the staging store",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the scope of the staging store: zone only for now",
          "length": 255,
          "name": "scope",
          "required": false,
          "type": "string"
        },
        {
          "description": "the staging store provider name",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL for the staging store",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        }
      ],
      "related": "addSecondaryStorage,listImageStores,addImageStore",
      "response": [
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the details of the image store",
          "name": "details",
          "type": "set"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        }
      ]
    },
    {
      "description": "Starts a system virtual machine.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": true,
      "name": "startSystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,stopSystemVm,startSystemVm,changeServiceForSystemVm,migrateSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,stopSystemVm,changeServiceForSystemVm,migrateSystemVm",
      "response": [
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates load balancer health check policy",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "updateLBHealthCheckPolicy",
      "params": [
        {
          "description": "an optional field, whether to the display the policy to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "ID of load balancer health check policy",
          "length": 255,
          "name": "id",
          "related": "updateLBHealthCheckPolicy",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Lists supported methods of network isolation",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listNetworkIsolationMethods",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Network isolation method name",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Reboots a virtual machine.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "rebootVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {},
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        }
      ]
    },
    {
      "description": "List a storage network IP range.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listStorageNetworkIpRange",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "optional parameter. Storaget network IP range uuid, if specicied, using it to search the range.",
          "length": 255,
          "name": "id",
          "related": "updateStorageNetworkIpRange,listStorageNetworkIpRange,createStorageNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "optional parameter. Pod uuid, if specicied and range uuid is absent, using it to search the range.",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "optional parameter. Zone uuid, if specicied and both pod uuid and range uuid are absent, using it to search the range.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateStorageNetworkIpRange,createStorageNetworkIpRange",
      "response": [
        {
          "description": "the start ip of the storage network IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the network uuid of storage network IP range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the Pod uuid for the storage network IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the gateway of the storage network IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Zone uuid of the storage network IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the uuid of storage network IP range.",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the netmask of the storage network IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "integer"
        },
        {
          "description": "the end ip of the storage network IP range",
          "name": "endip",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Configures a virtual router element.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": true,
      "name": "configureVirtualRouterElement",
      "params": [
        {
          "description": "the ID of the virtual router provider",
          "length": 255,
          "name": "id",
          "related": "configureVirtualRouterElement,listVirtualRouterElements,createVirtualRouterElement",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "length": 255,
          "name": "enabled",
          "required": true,
          "type": "boolean"
        }
      ],
      "related": "listVirtualRouterElements,createVirtualRouterElement",
      "response": [
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a specified domain",
      "groupdescription": "Domain",
      "groupname": "DomainService",
      "isasync": true,
      "name": "deleteDomain",
      "params": [
        {
          "description": "true if all domain resources (child domains, accounts) have to be cleaned up, false otherwise",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "ID of domain to delete",
          "length": 255,
          "name": "id",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Migrate volume",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "migrateVolume",
      "params": [
        {
          "description": "destination storage pool ID to migrate the volume to",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "if the volume should be live migrated when it is attached to a running vm",
          "length": 255,
          "name": "livemigrate",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "volumeid",
          "related": "resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,migrateVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a load balancer rule",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "createLoadBalancerRule",
      "params": [
        {
          "description": "the private port of the private IP address/virtual machine where the network traffic will be load balanced to",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "zone where the load balancer is going to be created. This parameter is required when LB service provider is ElasticLoadBalancerVm",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "The protocol for the LB",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitely. If not specified 1) defaulted to false when LB rule is being created for VPC guest network 2) in all other cases defaulted to true",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the HAProxy client_timeout setting for this load balancing rule (in ms).",
          "length": 255,
          "name": "clienttimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the HAProxy server_timeout setting for this load balancing rule (in ms).",
          "length": 255,
          "name": "servertimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "public IP address ID from where the network traffic will be load balanced from",
          "length": 255,
          "name": "publicipid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID associated with the load balancer",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": true,
          "type": "string"
        },
        {
          "description": "the CIDR list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the account associated with the load balancer. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the public port from where the network traffic will be load balanced from",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "The guest network this rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateLoadBalancerRule,listLoadBalancerRules",
      "response": [
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the HAProxy client_timeout setting for this load balancing rule.",
          "name": "clienttimeout",
          "type": "integer"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the protocol of the loadbalanacer rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the HAProxy server_timeout setting for this load balancing rule.",
          "name": "servertimeout",
          "type": "integer"
        }
      ]
    },
    {
      "description": "A command to list events.",
      "groupdescription": "Event",
      "groupname": "EventService",
      "isasync": false,
      "name": "listEvents",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the time the event was entered",
          "length": 255,
          "name": "entrytime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the event level (INFO, WARN, ERROR)",
          "length": 255,
          "name": "level",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the start date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the end date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the event",
          "length": 255,
          "name": "id",
          "related": "listEvents",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the event type (see event types)",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the duration of the event",
          "length": 255,
          "name": "duration",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the user who performed the action (can be different from the account if an admin is performing an action for a user, e.g. starting/stopping a user's virtual machine)",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the id of the account's domain",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the account's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the event",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the type of the event (see event types)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "a brief description of the event",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "whether the event is parented",
          "name": "parentid",
          "type": "string"
        },
        {
          "description": "the date the event was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the event",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the account name for the account that owns the object being acted on in the event (e.g. the owner of the virtual machine, ip address, or security group)",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the event level (INFO, WARN, ERROR)",
          "name": "level",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates the affinity/anti-affinity group associations of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect.",
      "groupdescription": "Affinity Group",
      "groupname": "AffinityGroupService",
      "isasync": true,
      "name": "updateVMAffinityGroup",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVMAffinityGroup,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine.",
          "length": 255,
          "name": "affinitygroupids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine.",
          "length": 255,
          "name": "affinitygroupnames",
          "related": "",
          "required": false,
          "type": "list"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,updateVmNicIp,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {},
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Adds a guest OS name to hypervisor OS name mapping",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": true,
      "name": "addGuestOsMapping",
      "params": [
        {
          "description": "Hypervisor type. One of : XenServer, KVM",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "Hypervisor version to create the mapping for. Use 'default' for default versions",
          "length": 255,
          "name": "hypervisorversion",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of Guest OS type. Either the UUID or Display Name must be passed",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Display Name of Guest OS standard type. Either Display Name or UUID must be passed",
          "length": 255,
          "name": "osdisplayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "OS name specific to the hypervisor",
          "length": 255,
          "name": "osnameforhypervisor",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the Guest OS type",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "version of the hypervisor for mapping",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "standard display name for the Guest OS",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "is the mapping user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS mapping",
          "name": "id",
          "type": "string"
        },
        {
          "description": "hypervisor specific name for the Guest OS",
          "name": "osnameforhypervisor",
          "type": "string"
        },
        {
          "description": "the hypervisor",
          "name": "hypervisor",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Creates resource tag(s)",
      "groupdescription": "Resource tags",
      "groupname": "ResourcetagsService",
      "isasync": true,
      "name": "createTags",
      "params": [
        {
          "description": "list of resources to create the tags for",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Map of tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": true,
          "type": "map"
        },
        {
          "description": "identifies client specific tag. When the value is not null, the tag can't be used by cloudStack code internally",
          "length": 255,
          "name": "customer",
          "required": false,
          "type": "string"
        },
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Updates a network offering.",
      "groupdescription": "Network Offering",
      "groupname": "NetworkOfferingService",
      "isasync": false,
      "name": "updateNetworkOffering",
      "params": [
        {
          "description": "the display text of the network offering",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the network offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the network offering",
          "length": 255,
          "name": "id",
          "related": "updateNetworkOffering,createNetworkOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability of network offering. Default value is Required for Guest Virtual network offering; Optional for Guest Direct network offering",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "update state for the network offering",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true keepalive will be turned on in the loadbalancer. At the time of writing this has only an effect on haproxy; the mode http and httpclose options are unset in the haproxy conf file.",
          "length": 255,
          "name": "keepaliveenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "sort key of the network offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "maximum number of concurrent connections supported by the network offering",
          "length": 255,
          "name": "maxconnections",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createNetworkOffering",
      "response": [
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "the ID of the secondary service offering used by virtual router provider",
          "name": "secondaryserviceofferingid",
          "type": "string"
        },
        {
          "description": "true if network offering supports network that span multiple zones",
          "name": "supportsstrechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the secondary service offering used by virtual router provider",
          "name": "secondaryserviceofferingname",
          "type": "string"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering used by virtual router provider",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Reset api count",
      "groupdescription": "Limit",
      "groupname": "LimitService",
      "isasync": false,
      "name": "resetApiLimit",
      "params": [
        {
          "description": "the ID of the acount whose limit to be reset",
          "length": 255,
          "name": "account",
          "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "getApiLimit",
      "response": [
        {
          "description": "number of api already issued",
          "name": "apiIssued",
          "type": "int"
        },
        {
          "description": "the account name of the api remaining count",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the account uuid of the api remaining count",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "seconds left to reset counters",
          "name": "expireAfter",
          "type": "long"
        },
        {
          "description": "currently allowed number of apis",
          "name": "apiAllowed",
          "type": "int"
        }
      ]
    },
    {
      "description": "Creates a VLAN IP range.",
      "groupdescription": "VLAN",
      "groupname": "VLANService",
      "isasync": false,
      "name": "deleteVlanIpRange",
      "params": [
        {
          "description": "the id of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "createVlanIpRange,dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Generates an alert",
      "groupdescription": "Alert",
      "groupname": "AlertService",
      "isasync": true,
      "name": "generateAlert",
      "params": [
        {
          "description": "Alert description",
          "length": 999,
          "name": "description",
          "required": true,
          "type": "string"
        },
        {
          "description": "Name of the alert",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of the alert",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "short"
        },
        {
          "description": "Pod id for which alert is generated",
          "length": 255,
          "name": "podid",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Zone id for which alert is generated",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.3"
    },
    {
      "description": "Add a new Ldap Configuration",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "addLdapConfiguration",
      "params": [
        {
          "description": "Hostname",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Port",
          "length": 255,
          "name": "port",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "deleteLdapConfiguration",
      "response": [
        {
          "description": "port",
          "name": "port",
          "type": "int"
        },
        {
          "description": "hostname",
          "name": "hostname",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a port forwarding rule",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "deletePortForwardingRule",
      "params": [
        {
          "description": "the ID of the port forwarding rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a system VM.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": true,
      "name": "stopSystemVm",
      "params": [
        {
          "description": "Force stop the VM.  The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,stopSystemVm,changeServiceForSystemVm,migrateSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,changeServiceForSystemVm,migrateSystemVm",
      "response": [
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an egress firewall rule",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "deleteEgressFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,createIpForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a VPC",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "updateVPC",
      "params": [
        {
          "description": "The new VPC offering ID to switch to. This will result in a restart+cleanup of the VPC",
          "length": 255,
          "name": "vpcofferingid",
          "related": "updateVPCOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the vpc to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "Source NAT CIDR list for used to allow other CIDRs to be source NATted by the VPC over the public interface",
          "length": 255,
          "name": "sourcenatlist",
          "required": false,
          "type": "string"
        },
        {
          "description": "Comma separated list of IP addresses to configure as syslog servers on the VPC to forward IP tables logging",
          "length": 255,
          "name": "syslogserverlist",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "length": 255,
          "name": "id",
          "related": "createVPC,updateVPC,updateVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the VPC",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVPC,updateVPC,createVPC,listVPCs",
      "response": [
        {
          "description": "display text of the vpc offering the vpc is created from",
          "name": "vpcofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the vpc offering the vpc is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Comma separated list of IP addresses to configure as syslog servers on the VPC to forward IP tables logging",
          "name": "syslogserverlist",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "Source Nat CIDR list for used to allow other CIDRs to be source NATted by the VPC over the public interface",
          "name": "sourcenatlist",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the name of the ACL applied to this IP",
              "name": "aclname",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
              "name": "zonesnetworkspans",
              "type": "set"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
              "name": "ipexclusionlist",
              "type": "string"
            },
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    },
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "true if network can span multiple zones",
              "name": "strechedl2subnet",
              "type": "boolean"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List resource detail(s)",
      "groupdescription": "Resource metadata",
      "groupname": "ResourcemetadataService",
      "isasync": false,
      "name": "listResourceDetails",
      "params": [
        {
          "description": "if set to true, only details marked with display=true, are returned. False by default",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.3",
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by key, value. Needs to be passed only along with key",
          "length": 255,
          "name": "value",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by key",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by resource id",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listTags",
      "response": [
        {
          "description": "the ID of the domain associated with the tag",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "the project name where tag belongs to",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id the tag belongs to",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "tag value",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the domain associated with the tag",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "resource type",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "tag key name",
          "name": "key",
          "type": "string"
        },
        {
          "description": "the account associated with the tag",
          "name": "account",
          "type": "string"
        },
        {
          "description": "customer associated with the tag",
          "name": "customer",
          "type": "string"
        }
      ],
      "since": "4.2"
    },
    {
      "description": "Creates a network offering.",
      "groupdescription": "Network Offering",
      "groupname": "NetworkOfferingService",
      "isasync": false,
      "name": "createNetworkOffering",
      "params": [
        {
          "description": "true if the network offering is IP conserve mode enabled",
          "length": 255,
          "name": "conservemode",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "length": 255,
          "name": "egressdefaultpolicy",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if network offering supports specifying ip ranges; defaulted to false if not specified",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "data transfer rate in megabits per second allowed",
          "length": 255,
          "name": "networkrate",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the display text of the network offering",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the traffic type for the network offering. Supported type in current release is GUEST only",
          "length": 255,
          "name": "traffictype",
          "required": true,
          "type": "string"
        },
        {
          "description": "services supported by the network offering",
          "length": 255,
          "name": "supportedservices",
          "required": true,
          "type": "list"
        },
        {
          "description": "guest type of the network offering: Shared or Isolated",
          "length": 255,
          "name": "guestiptype",
          "required": true,
          "type": "string"
        },
        {
          "description": "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network",
          "length": 255,
          "name": "serviceproviderlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "the tags for the network offering.",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true keepalive will be turned on in the loadbalancer. At the time of writing this has only an effect on haproxy; the mode http and httpclose options are unset in the haproxy conf file.",
          "length": 255,
          "name": "keepaliveenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "desired service capabilities as part of network offering",
          "length": 255,
          "name": "servicecapabilitylist",
          "required": false,
          "type": "map"
        },
        {
          "description": "maximum number of concurrent connections supported by the network offering",
          "length": 255,
          "name": "maxconnections",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if network offering supports persistent networks; defaulted to false if not specified",
          "length": 255,
          "name": "ispersistent",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the availability of network offering. Default value is Optional",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the network offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the second VPC router appliance (in case of redundancy)",
          "length": 255,
          "name": "secondaryserviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the service offering ID used by virtual router provider",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if network offering supports vlans",
          "length": 255,
          "name": "specifyvlan",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Network offering details in key/value pairs. Supported keys are publiclbprovider with service provider as a value",
          "length": 255,
          "name": "details",
          "required": false,
          "since": "4.2.0",
          "type": "map"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the secondary service offering used by virtual router provider",
          "name": "secondaryserviceofferingid",
          "type": "string"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "true if network offering supports network that span multiple zones",
          "name": "supportsstrechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "the name of the service offering used by virtual router provider",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary service offering used by virtual router provider",
          "name": "secondaryserviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Dedicate an existing cluster",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": true,
      "name": "dedicateCluster",
      "params": [
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the Cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listDedicatedClusters",
      "response": [
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the cluster",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Account ID of the cluster",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain ID of the cluster",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the cluster",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the name of the cluster",
          "name": "clustername",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an IP forwarding rule",
      "groupdescription": "NAT",
      "groupname": "NATService",
      "isasync": true,
      "name": "createIpForwardingRule",
      "params": [
        {
          "description": "the public IP address ID of the forwarding rule, already associated via associateIp",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the start port for the rule",
          "length": 255,
          "name": "startport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the CIDR list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the end port for the rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. Has value true by default",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the protocol for the rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        }
      ],
      "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
      "response": [
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists SSL certificates",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "listSslCerts",
      "params": [
        {
          "description": "Project that owns the SSL certificate",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Account ID",
          "length": 255,
          "name": "accountid",
          "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Load balancer rule ID",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "ID of SSL certificate",
          "length": 255,
          "name": "certid",
          "related": "listSslCerts,uploadSslCert",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "uploadSslCert",
      "response": [
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "certificate fingerprint",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "SSL certificate ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "certificate",
          "name": "certificate",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "account for the certificate",
          "name": "account",
          "type": "string"
        },
        {
          "description": "certificate chain",
          "name": "certchain",
          "type": "string"
        },
        {
          "description": "List of loabalancers this certificate is bound to",
          "name": "loadbalancerrulelist",
          "type": "list"
        },
        {
          "description": "the project name of the certificate",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the certificate",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a configuration.",
      "groupdescription": "Configuration",
      "groupname": "ConfigurationService",
      "isasync": false,
      "name": "updateConfiguration",
      "params": [
        {
          "description": "the name of the configuration",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the Cluster to update the parameter value for corresponding cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Zone to update the parameter value for corresponding zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Account to update the parameter value for corresponding account",
          "length": 255,
          "name": "accountid",
          "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Storage pool to update the parameter value for corresponding storage pool",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the value of the configuration",
          "length": 4095,
          "name": "value",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listConfigurations",
      "response": [
        {
          "description": "the category of the configuration",
          "name": "category",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the name of the configuration",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "id",
          "type": "long"
        },
        {
          "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the description of the configuration",
          "name": "description",
          "type": "string"
        }
      ]
    },
    {
      "description": "List private gateways",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": false,
      "name": "listPrivateGateways",
      "params": [
        {
          "description": "list gateways by network ID",
          "length": 255,
          "name": "networkid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list private gateway by IP",
          "length": 255,
          "name": "id",
          "related": "listPrivateGateways,createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list gateways by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list gateways by IP address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list gateways by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createPrivateGateway",
      "response": [
        {
          "description": "zone id of the private gateway",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the private gateway's ip address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project name of the private gateway",
          "name": "project",
          "type": "string"
        },
        {
          "description": "State of the gateway, can be Creating, Ready, Deleting",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the network name",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "VPC the private gateaway belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the network implementation uri for the private gateway",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the account associated with the private gateway",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain associated with the private gateway",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the private gateway",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the CIDR of the private network",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the private gateway",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Souce Nat enable status",
          "name": "sourcenatsupported",
          "type": "boolean"
        },
        {
          "description": "the id of the private gateway",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the zone the private gateway belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "ACL Id set for private gateway",
          "name": "aclid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Update the default Ip of a VM Nic",
      "groupdescription": "Nic",
      "groupname": "NicService",
      "isasync": true,
      "name": "updateVmNicIp",
      "params": [
        {
          "description": "Secondary IP Address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the nic to which you want to assign private IP",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {},
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates load balancer stickiness policy",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "updateLBStickinessPolicy",
      "params": [
        {
          "description": "id of lb stickiness policy",
          "length": 255,
          "name": "id",
          "related": "updateLBStickinessPolicy,listLBStickinessPolicies,createLBStickinessPolicy",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the policy to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "listLBStickinessPolicies,createLBStickinessPolicy",
      "response": [
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Dedicates a Public IP range to an account",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "dedicatePublicIpRange",
      "params": [
        {
          "description": "account who will own the VLAN",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "createVlanIpRange,dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "project who will own the VLAN",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "domain ID of the account owning a VLAN",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createVlanIpRange",
      "response": [
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all Pods.",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": false,
      "name": "listPods",
      "params": [
        {
          "description": "list Pods by Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Pods by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list pods by allocation state",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the capacity of the pods",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Pods by ID",
          "length": 255,
          "name": "id",
          "related": "updatePod,listPods",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updatePod",
      "response": [
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the starting IP for the Pod",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the ending IP for the Pod",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a disk offering.",
      "groupdescription": "Disk Offering",
      "groupname": "DiskOfferingService",
      "isasync": false,
      "name": "updateDiskOffering",
      "params": [
        {
          "description": "updates name of the disk offering with this value",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "updates alternate display text of the disk offering with this value",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the disk offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to display the offering to the end user or not.",
          "length": 255,
          "name": "displayoffering",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "updateDiskOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        },
        {
          "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        },
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Enables static NAT for given IP address",
      "groupdescription": "NAT",
      "groupname": "NATService",
      "isasync": false,
      "name": "enableStaticNat",
      "params": [
        {
          "description": "the public IP address ID for which static NAT feature is being enabled",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VM guest NIC secondary IP address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network of the VM the static NAT will be enabled for. Required when public IP address is not associated with any guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine for enabling static NAT feature",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a Zone.",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": false,
      "name": "deleteZone",
      "params": [
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "id",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available snapshots for the account.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": false,
      "name": "listSnapshots",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY.",
          "length": 255,
          "name": "intervaltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists snapshot by snapshot name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list snapshots by zone id",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "valid values are MANUAL or RECURRING.",
          "length": 255,
          "name": "snapshottype",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists snapshot by snapshot ID",
          "length": 255,
          "name": "id",
          "related": "revertSnapshot,createSnapshotFromVMSnapshot,listSnapshots,createSnapshot",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "revertSnapshot,createSnapshotFromVMSnapshot,createSnapshot",
      "response": [
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with snapshot",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds account to a project",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": true,
      "name": "addAccountToProject",
      "params": [
        {
          "description": "name of the account to be added to the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "email to which invitation to the project is going to be sent",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the project to add the account to",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Reset site to site vpn connection",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "resetVpnConnection",
      "params": [
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "updateVpnConnection,createVpnConnection,resetVpnConnection",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for connection. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for connection. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateVpnConnection,createVpnConnection",
      "response": [
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Deletes a keypair by name",
      "groupdescription": "SSH",
      "groupname": "SSHService",
      "isasync": false,
      "name": "deleteSSHKeyPair",
      "params": [
        {
          "description": "the account associated with the keypair. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the project associated with keypair",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID associated with the keypair",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Recovers a virtual machine.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": false,
      "name": "recoverVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,recoverVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {},
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        }
      ]
    },
    {
      "description": "upload an existing template into the CloudStack cloud. ",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "getUploadParamsForTemplate",
      "params": [
        {
          "description": "Upload volume/template for the project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the volume/template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the MD5 checksum value of this volume/template",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "32 or 64 bits support. 64 by default",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the format for the volume/template. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone the volume/template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Template details in key/value pairs.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template is available to all accounts; default is true",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "signature to be sent in the POST request.",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "POST url to upload the file to",
          "name": "postURL",
          "type": "url"
        },
        {
          "description": "encrypted data to be sent in the POST request.",
          "name": "metadata",
          "type": "string"
        },
        {
          "description": "the template/volume ID",
          "name": "id",
          "type": "uuid"
        },
        {
          "description": "the timestamp after which the signature expires",
          "name": "expires",
          "type": "string"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Deletes a load balancer rule.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "deleteLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Release the dedication for host",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": true,
      "name": "releaseDedicatedHost",
      "params": [
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Accepts or declines project invitation",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "updateProjectInvitation",
      "params": [
        {
          "description": "account that is joining the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the project to join",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "list invitations for specified account; this parameter has to be specified with domainId",
          "length": 255,
          "name": "token",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true, accept the invitation, decline if false. True by default",
          "length": 255,
          "name": "accept",
          "required": false,
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Returns user data associated with the VM",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "getVirtualMachineUserData",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "Base 64 encoded VM user data",
          "name": "userdata",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "revert a volume snapshot.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "revertSnapshot",
      "params": [
        {
          "description": "The ID of the snapshot",
          "length": 255,
          "name": "id",
          "related": "revertSnapshot,createSnapshotFromVMSnapshot,createSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createSnapshotFromVMSnapshot,createSnapshot",
      "response": [
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with snapshot",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all configurations.",
      "groupdescription": "Configuration",
      "groupname": "ConfigurationService",
      "isasync": false,
      "name": "listConfigurations",
      "params": [
        {
          "description": "the ID of the Zone to update the parameter value for corresponding zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the Cluster to update the parameter value for corresponding cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Storage pool to update the parameter value for corresponding storage pool",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists configurations by category",
          "length": 255,
          "name": "category",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Account to update the parameter value for corresponding account",
          "length": 255,
          "name": "accountid",
          "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists configuration by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the configuration",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "id",
          "type": "long"
        },
        {
          "description": "the description of the configuration",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the category of the configuration",
          "name": "category",
          "type": "string"
        },
        {
          "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "value",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Regions",
      "groupdescription": "Region",
      "groupname": "RegionService",
      "isasync": false,
      "name": "listRegions",
      "params": [
        {
          "description": "List Region by region name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List Region by region ID.",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addRegion",
      "response": [
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Disables static rule for given IP address",
      "groupdescription": "NAT",
      "groupname": "NATService",
      "isasync": true,
      "name": "disableStaticNat",
      "params": [
        {
          "description": "the public IP address ID for which static NAT feature is being disabled",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Assigns secondary IP to NIC",
      "groupdescription": "Nic",
      "groupname": "NicService",
      "isasync": true,
      "name": "addIpToNic",
      "params": [
        {
          "description": "Secondary IP Address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the nic to which you want to assign private IP",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the vm",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "Secondary IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ID of the network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the secondary private IP addr",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the nic",
          "name": "nicid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attempts Migration of a system virtual machine to the host specified.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": true,
      "name": "migrateSystemVm",
      "params": [
        {
          "description": "destination Host ID to migrate VM to",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "listSystemVms,changeServiceForSystemVm,migrateSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,changeServiceForSystemVm",
      "response": [
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available virtual router elements.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": false,
      "name": "listVirtualRouterElements",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list virtual router elements by network service provider id",
          "length": 255,
          "name": "nspid",
          "related": "updateNetworkServiceProvider,listNetworkServiceProviders,addNetworkServiceProvider,listTrafficTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network offerings by enabled state",
          "length": 255,
          "name": "enabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list virtual router elements by id",
          "length": 255,
          "name": "id",
          "related": "listVirtualRouterElements,createVirtualRouterElement",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createVirtualRouterElement",
      "response": [
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a vm group",
      "groupdescription": "VM Group",
      "groupname": "VMGroupService",
      "isasync": false,
      "name": "deleteInstanceGroup",
      "params": [
        {
          "description": "the ID of the instance group",
          "length": 255,
          "name": "id",
          "related": "updateInstanceGroup,createInstanceGroup,listInstanceGroups",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Deletes a host.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "deleteHost",
      "params": [
        {
          "description": "Force destroy local storage on this host. All VMs created on this local storage will be destroyed",
          "length": 255,
          "name": "forcedestroylocalstorage",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Force delete the host. All HA enabled vms running on the host will be put to HA; HA disabled ones will be stopped",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists capabilities",
      "groupdescription": "Configuration",
      "groupname": "ConfigurationService",
      "isasync": false,
      "name": "listCapabilities",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "true if region wide secondary is enabled, false otherwise",
          "name": "regionsecondaryenabled",
          "type": "boolean"
        },
        {
          "description": "minimum size that can be specified when create disk from disk offering with custom size",
          "name": "customdiskofferingminsize",
          "type": "long"
        },
        {
          "description": "maximum size that can be specified when create disk from disk offering with custom size",
          "name": "customdiskofferingmaxsize",
          "type": "long"
        },
        {
          "description": "true if snapshot is supported for KVM host, false otherwise",
          "name": "kvmsnapshotenabled",
          "type": "boolean"
        },
        {
          "description": "version of the cloud stack",
          "name": "cloudstackversion",
          "type": "string"
        },
        {
          "description": "time interval (in seconds) to reset api count",
          "name": "apilimitinterval",
          "type": "integer"
        },
        {
          "description": "true if the user can deploy VMs on KVM, false otherwise",
          "name": "kvmdeploymentsenabled",
          "type": "boolean"
        },
        {
          "description": "Max allowed number of api requests within the specified interval",
          "name": "apilimitmax",
          "type": "integer"
        },
        {
          "description": "true if user and domain admins can set templates to be shared, false otherwise",
          "name": "userpublictemplateenabled",
          "type": "boolean"
        },
        {
          "description": "true if the user can deploy VMs on XenServer, false otherwise",
          "name": "xenserverdeploymentsenabled",
          "type": "boolean"
        },
        {
          "description": "If invitation confirmation is required when add account to project",
          "name": "projectinviterequired",
          "type": "boolean"
        },
        {
          "description": "true if regular user is allowed to create projects",
          "name": "allowusercreateprojects",
          "type": "boolean"
        },
        {
          "description": "Cosmic or not",
          "name": "cosmic",
          "type": "boolean"
        },
        {
          "description": "true if the user can recover and expunge virtualmachines, false otherwise",
          "name": "allowuserexpungerecovervm",
          "type": "boolean"
        },
        {
          "description": "true if region supports elastic load balancer on basic zones",
          "name": "supportELB",
          "type": "string"
        },
        {
          "description": "true if the user is allowed to view destroyed virtualmachines, false otherwise",
          "name": "allowuserviewdestroyedvm",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Release dedication of zone",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": true,
      "name": "releaseDedicatedZone",
      "params": [
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an image store or Secondary Storage.",
      "groupdescription": "Image Store",
      "groupname": "ImageStoreService",
      "isasync": false,
      "name": "deleteImageStore",
      "params": [
        {
          "description": "The image store ID or Secondary Storage ID.",
          "length": 255,
          "name": "id",
          "related": "addSecondaryStorage,listImageStores,addImageStore",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates a network serviceProvider of a physical network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "updateNetworkServiceProvider",
      "params": [
        {
          "description": "the list of services to be enabled for this physical network service provider",
          "length": 255,
          "name": "servicelist",
          "required": false,
          "type": "list"
        },
        {
          "description": "Enabled/Disabled/Shutdown the physical network service provider",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "network service provider id",
          "length": 255,
          "name": "id",
          "related": "updateNetworkServiceProvider,listNetworkServiceProviders,addNetworkServiceProvider,listTrafficTypes",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listNetworkServiceProviders,addNetworkServiceProvider,listTrafficTypes",
      "response": [
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Removes a virtual machine or a list of virtual machines from a load balancer rule.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "removeFromLoadBalancerRule",
      "params": [
        {
          "description": "the list of IDs of the virtual machines that are being removed from the load balancer rule (i.e. virtualMachineIds=1,2,3)",
          "length": 255,
          "name": "virtualmachineids",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "list"
        },
        {
          "description": "The ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75",
          "length": 255,
          "name": "vmidipmap",
          "required": false,
          "since": "4.4",
          "type": "map"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Recalculate and update resource count for an account or domain.",
      "groupdescription": "Limit",
      "groupname": "LimitService",
      "isasync": false,
      "name": "updateResourceCount",
      "params": [
        {
          "description": "If account parameter specified then updates resource counts for a specified account in this domain else update resource counts for all accounts & child domains in specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Update resource limits for project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Type of resource to update. If specifies valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 and 11. If not specified will update all resource counts0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create. 3 - Snapshot. Number of snapshots a user can create. 4 - Template. Number of templates that a user can register/create. 5 - Project. Number of projects that a user can create. 6 - Network. Number of guest network a user can create. 7 - VPC. Number of VPC a user can create. 8 - CPU. Total number of CPU cores a user can use. 9 - Memory. Total Memory (in MB) a user can use. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Update resource count for a specified account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name for which resource count's are updated",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the project id for which resource count's are updated",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account for which resource count's are updated",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name for which resource count's are updated",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain ID for which resource count's are updated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "resource count",
          "name": "resourcecount",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists vm groups",
      "groupdescription": "VM Group",
      "groupname": "VMGroupService",
      "isasync": false,
      "name": "listInstanceGroups",
      "params": [
        {
          "description": "list instance groups by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list instance groups by ID",
          "length": 255,
          "name": "id",
          "related": "updateInstanceGroup,createInstanceGroup,listInstanceGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateInstanceGroup,createInstanceGroup",
      "response": [
        {
          "description": "the project ID of the instance group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the instance group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists site 2 site vpn gateways",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": false,
      "name": "listVpnGateways",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "id of the vpn gateway",
          "length": 255,
          "name": "id",
          "related": "updateVpnGateway,createVpnGateway,listVpnGateways",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateVpnGateway,createVpnGateway",
      "response": [
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "is vpn gateway for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates a static route",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "createStaticRoute",
      "params": [
        {
          "description": "The CIDR to create the static route for",
          "length": 255,
          "name": "cidr",
          "required": true,
          "type": "string"
        },
        {
          "description": "The VPC id we are creating static route for.",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The private gateway id to get the ipaddress from (DEPRECATED!).",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "IP address of the nexthop to route the CIDR to",
          "length": 255,
          "name": "nexthop",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listStaticRoutes",
      "response": [
        {
          "description": "The CIDR to route",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the domain associated with the static route",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with static route",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "VPC the static route belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the project name of the static route",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the state of the static route",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Gateway ip address the CIDR is routed to",
          "name": "nexthop",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the static route",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account associated with the static route",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the static route",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of static route",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds traffic type to a physical network",
      "groupdescription": "Usage",
      "groupname": "UsageService",
      "isasync": true,
      "name": "addTrafficType",
      "params": [
        {
          "description": "Used if physical network has multiple isolation types and traffic type is public. Choose which isolation method. Valid options currently 'vlan' or 'vxlan', defaults to 'vlan'.",
          "length": 255,
          "name": "isolationmethod",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
          "length": 255,
          "name": "xennetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The VLAN id to be used for Management traffic by the host",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the trafficType to be added to the physical network",
          "length": 255,
          "name": "traffictype",
          "required": true,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
          "length": 255,
          "name": "kvmnetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,updatePhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "id of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
          "name": "xennetworklabel",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
          "name": "kvmnetworklabel",
          "type": "string"
        },
        {
          "description": "the trafficType to be added to the physical network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a Private gateway",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "deletePrivateGateway",
      "params": [
        {
          "description": "the ID of the private gateway",
          "length": 255,
          "name": "id",
          "related": "createPrivateGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Retrieves a cloud identifier.",
      "groupdescription": "System",
      "groupname": "SystemService",
      "isasync": false,
      "name": "getCloudIdentifier",
      "params": [
        {
          "description": "the user ID for the cloud identifier",
          "length": 255,
          "name": "userid",
          "related": "getUser,enableUser,createUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the signed response for the cloud identifier",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "the cloud identifier",
          "name": "cloudidentifier",
          "type": "string"
        },
        {
          "description": "the user ID for the cloud identifier",
          "name": "userid",
          "type": "string"
        }
      ]
    },
    {
      "description": "List all virtual machine instances that are assigned to a load balancer rule.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "listLoadBalancerRuleInstances",
      "params": [
        {
          "description": "true if listing all virtual machines currently applied to the load balancer rule; default is true",
          "length": 255,
          "name": "applied",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if load balancer rule VM IP information to be included; default is false",
          "length": 255,
          "name": "lbvmips",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listLoadBalancerRuleInstances",
      "response": [
        {
          "description": "the user vm set for lb rule",
          "name": "loadbalancerruleinstance",
          "type": "uservmresponse"
        },
        {
          "description": "IP addresses of the vm set of lb rule",
          "name": "lbvmipaddresses",
          "type": "list"
        }
      ]
    },
    {
      "description": "Creates a load balancer stickiness policy ",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "createLBStickinessPolicy",
      "params": [
        {
          "description": "name of the load balancer stickiness policy",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "param list. Example: param[0].name=cookiename&param[0].value=LBCookie ",
          "length": 255,
          "name": "param",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "name of the load balancer stickiness policy method, possible values can be obtained from listNetworks API",
          "length": 255,
          "name": "methodname",
          "required": true,
          "type": "string"
        },
        {
          "description": "the description of the load balancer stickiness policy",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listLBStickinessPolicies",
      "response": [
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            }
          ],
          "type": "list"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates ACL item with specified ID",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "updateNetworkACLItem",
      "params": [
        {
          "description": "scl entry action, allow or deny",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending port of ACL",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the starting port of ACL",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this ICMP message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the traffic type for the ACL,can be Ingress or Egress, defaulted to Ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the network ACL item",
          "length": 255,
          "name": "id",
          "related": "updateNetworkACLItem,listNetworkACLs,createNetworkACL",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The network of the vm the ACL will be created for",
          "length": 255,
          "name": "number",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to allow traffic from/to",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listNetworkACLs,createNetworkACL",
      "response": [
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        }
      ]
    },
    {
      "description": "List routers.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": false,
      "name": "listRouters",
      "params": [
        {
          "description": "if true is passed for this parameter, list only VPC routers",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the router",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List networks by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID of the router",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID of the router",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the state of the router",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster ID of the router",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list virtual router elements by version",
          "length": 255,
          "name": "version",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Pod ID of the router",
          "length": 255,
          "name": "podid",
          "related": "updatePod",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk router",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "changeServiceForRouter,rebootRouter,destroyRouter",
      "response": [
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Releases host reservation.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": true,
      "name": "releaseHostReservation",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a domain with a new name",
      "groupdescription": "Domain",
      "groupname": "DomainService",
      "isasync": false,
      "name": "updateDomain",
      "params": [
        {
          "description": "Email address associated with this domain",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of domain to update",
          "length": 255,
          "name": "id",
          "related": "listDomainChildren,updateDomain,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "updates domain with this name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain for the domain's networks; empty string will update domainName with NULL value",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listDomainChildren,createDomain,listDomains,listDomains",
      "response": [
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "the email address associated with the domain",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Create site to site vpn connection",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "createVpnConnection",
      "params": [
        {
          "description": "connection is passive or not",
          "length": 255,
          "name": "passive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of the vpn gateway",
          "length": 255,
          "name": "s2svpngatewayid",
          "related": "updateVpnGateway,createVpnGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "id of the customer gateway",
          "length": 255,
          "name": "s2scustomergatewayid",
          "related": "listVpnCustomerGateways,createVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateVpnConnection",
      "response": [
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        }
      ]
    },
    {
      "description": "Updates a physical network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "updatePhysicalNetwork",
      "params": [
        {
          "description": "the speed for the physical network[1G/10G]",
          "length": 255,
          "name": "networkspeed",
          "required": false,
          "type": "string"
        },
        {
          "description": "physical network id",
          "length": 255,
          "name": "id",
          "related": "createPhysicalNetwork,updatePhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the VLAN for the physical network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "Enabled/Disabled",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tag the physical network",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "list"
        }
      ],
      "related": "createPhysicalNetwork",
      "response": [
        {
          "description": "the domain id of the physical network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the physical network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "comma separated tag",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the vlan of the physical network",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "zone id of the physical network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Broadcast domain range of the physical network",
          "name": "broadcastdomainrange",
          "type": "string"
        },
        {
          "description": "state of the physical network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the uuid of the physical network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the speed of the physical network",
          "name": "networkspeed",
          "type": "string"
        },
        {
          "description": "isolation methods",
          "name": "isolationmethods",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a Physical Network.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "deletePhysicalNetwork",
      "params": [
        {
          "description": "the ID of the Physical network",
          "length": 255,
          "name": "id",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Dedicates a host.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": true,
      "name": "dedicateHost",
      "params": [
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the host to update",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listDedicatedHosts",
      "response": [
        {
          "description": "the Dedication Affinity Group ID of the host",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the Account ID of the host",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the domain ID of the host",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "List system virtual machines.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": false,
      "name": "listSystemVms",
      "params": [
        {
          "description": "the Pod ID of the system VM",
          "length": 255,
          "name": "podid",
          "related": "updatePod",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the state of the system VM",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the system VM",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "since": "3.0.1",
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the system VM type. Possible types are \"consoleproxy\" and \"secondarystoragevm\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID of the system VM",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID of the system VM",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the system VM",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,changeServiceForSystemVm",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "changeServiceForSystemVm",
      "response": [
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates a project",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "createProject",
      "params": [
        {
          "description": "name of the project",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "display text of the project",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "account who will be Admin for the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a project",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "suspendProject,activateProject",
      "response": [
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Assigns a certificate to a load balancer rule",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "assignCertToLoadBalancer",
      "params": [
        {
          "description": "the ID of the certificate",
          "length": 255,
          "name": "certid",
          "related": "uploadSslCert",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Detaches a disk volume from a virtual machine.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "detachVolume",
      "params": [
        {
          "description": "the device ID on the virtual machine where volume is detached from",
          "length": 255,
          "name": "deviceid",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine where the volume is detached from",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "resizeVolume,detachVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "resizeVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Replaces ACL associated with a network or private gateway",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "replaceNetworkACLList",
      "params": [
        {
          "description": "the ID of the private gateway",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the public ip",
          "length": 255,
          "name": "publicipid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "aclid",
          "related": "listNetworkACLLists,createNetworkACLList",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes vpn user",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "removeVpnUser",
      "params": [
        {
          "description": "username for the vpn user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "remove vpn user from the project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the vpn user. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Marks a default zone for this account",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": true,
      "name": "markDefaultZoneForAccount",
      "params": [
        {
          "description": "Marks the account that belongs to the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Name of the account that is to be marked.",
          "length": 255,
          "name": "account",
          "related": "markDefaultZoneForAccount,listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Zone ID with which the account is to be marked.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
      "response": [
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        }
      ],
      "since": "4.0"
    },
    {
      "description": "Lists all LDAP Users",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "listLdapUsers",
      "params": [
        {
          "description": "Determines whether all ldap users are returned or just non-cloudstack users",
          "length": 255,
          "name": "listtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "The user's email",
          "name": "email",
          "type": "string"
        },
        {
          "description": "The user's principle",
          "name": "principal",
          "type": "string"
        },
        {
          "description": "The user's lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "The user's username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "The user's firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "The user's domain",
          "name": "domain",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Changes the service offering for a system vm (console proxy or secondary storage). The system vm must be in a \"Stopped\" state for this command to take effect.",
      "groupdescription": "System VM",
      "groupname": "SystemVMService",
      "isasync": false,
      "name": "changeServiceForSystemVm",
      "params": [
        {
          "description": "name value pairs of custom parameters for cpu, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the service offering ID to apply to the system vm",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the system vm",
          "length": 255,
          "name": "id",
          "related": "changeServiceForSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Logs out the user",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "logout",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "Response description",
          "name": "description",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a load balancer health check policy.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "deleteLBHealthCheckPolicy",
      "params": [
        {
          "description": "the ID of the load balancer health check policy",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "List the IP forwarding rules",
      "groupdescription": "NAT",
      "groupname": "NATService",
      "isasync": false,
      "name": "listIpForwardingRules",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists all rules applied to the specified VM.",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list the rule belonging to this public IP address",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updatePortForwardingRule,listPortForwardingRules,createPortForwardingRule",
      "response": [
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an instant snapshot of a volume.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "createSnapshot",
      "params": [
        {
          "description": "The domain ID of the snapshot. If used with the account parameter, specifies a domain for the account associated with the disk volume.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "resizeVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The account of the snapshot. The account parameter must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createSnapshotFromVMSnapshot",
      "response": [
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with snapshot",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a vmsnapshot.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "deleteVMSnapshot",
      "params": [
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "createVMSnapshot,listVMSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "list the vm nics  IP to NIC",
      "groupdescription": "Nic",
      "groupname": "NicService",
      "isasync": false,
      "name": "listNics",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the nic to to list IPs",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list nic of the specific vm's network",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Secondary ipv4 addr of nic",
          "name": "secondaryip",
          "type": "list"
        },
        {
          "description": "the broadcast uri of the nic",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "true if nic is default, false otherwise",
          "name": "macaddress",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the isolation uri of the nic",
          "name": "isolationuri",
          "type": "string"
        },
        {
          "description": "the type of the nic",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the nic",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the corresponding network",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "the traffic type of the nic",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "Id of the vm to which the nic belongs",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the gateway of the nic",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "true if nic is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the IPv6 address of network",
          "name": "ip6address",
          "type": "string"
        },
        {
          "description": "the ip address of the nic",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the netmask of the nic",
          "name": "netmask",
          "type": "string"
        }
      ]
    },
    {
      "description": "Starts a router.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": true,
      "name": "rebootRouter",
      "params": [
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "changeServiceForRouter,rebootRouter,destroyRouter",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "changeServiceForRouter,destroyRouter",
      "response": [
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a service offering.",
      "groupdescription": "Service Offering",
      "groupname": "ServiceOfferingService",
      "isasync": false,
      "name": "deleteServiceOffering",
      "params": [
        {
          "description": "the ID of the service offering",
          "length": 255,
          "name": "id",
          "related": "listServiceOfferings,updateServiceOffering,createServiceOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Adds a Nicira NVP device",
      "groupdescription": "Nicira NVP",
      "groupname": "NiciraNVPService",
      "isasync": true,
      "name": "addNiciraNvpDevice",
      "params": [
        {
          "description": "The L3 Gateway Service UUID configured on the Nicira Controller",
          "length": 255,
          "name": "l3gatewayserviceuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Credentials to access the Nicira Controller API",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Hostname of ip address of the Nicira NVP Controller.",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to access the Nicira Controller API",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Transportzone UUID configured on the Nicira Controller",
          "length": 255,
          "name": "transportzoneuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "device id of the Nicire Nvp",
          "name": "nvpdeviceid",
          "type": "string"
        },
        {
          "description": "the transport zone Uuid",
          "name": "transportzoneuuid",
          "type": "string"
        },
        {
          "description": "the physical network to which this Nirica Nvp belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "niciradevicename",
          "type": "string"
        },
        {
          "description": "this L3 gateway service Uuid",
          "name": "l3gatewayserviceuuid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the controller Ip address",
          "name": "hostname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Create a new keypair and returns the private key",
      "groupdescription": "SSH",
      "groupname": "SSHService",
      "isasync": false,
      "name": "createSSHKeyPair",
      "params": [
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Private key",
          "name": "privatekey",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an instant snapshot of a volume from existing vm snapshot.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "createSnapshotFromVMSnapshot",
      "params": [
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "createVMSnapshot,listVMSnapshot",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "resizeVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with snapshot",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists network serviceproviders for a given physical network.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listNetworkServiceProviders",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list providers by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list providers by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addNetworkServiceProvider,listTrafficTypes",
      "response": [
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists storage pools.",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": false,
      "name": "listStoragePools",
      "params": [
        {
          "description": "the IP address for the storage pool",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the storage pool path",
          "length": 255,
          "name": "path",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the storage pool",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list storage pools belongig to the specific cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "id",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the storage pool",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Pod ID for the storage pool",
          "length": 255,
          "name": "podid",
          "related": "updatePod",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "scope",
          "related": "findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "findStoragePoolsForMigration,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
      "response": [
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Updates a hypervisor capabilities.",
      "groupdescription": "Hypervisor",
      "groupname": "HypervisorService",
      "isasync": false,
      "name": "updateHypervisorCapabilities",
      "params": [
        {
          "description": "ID of the hypervisor capability",
          "length": 255,
          "name": "id",
          "related": "updateHypervisorCapabilities,listHypervisorCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the max number of Guest VMs per host for this hypervisor.",
          "length": 255,
          "name": "maxguestslimit",
          "required": false,
          "type": "long"
        }
      ],
      "related": "listHypervisorCapabilities",
      "response": [
        {
          "description": "true if storage motion is supported",
          "name": "storagemotionenabled",
          "type": "boolean"
        },
        {
          "description": "the maximum number of Hosts per cluster for this hypervisor",
          "name": "maxhostspercluster",
          "type": "integer"
        },
        {
          "description": "the maximum number of Data Volumes that can be attached for this hypervisor",
          "name": "maxdatavolumeslimit",
          "type": "integer"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the ID of the hypervisor capabilities row",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hypervisor type",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the maximum number of guest vms recommended for this hypervisor",
          "name": "maxguestslimit",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Find hosts suitable for migrating a virtual machine.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "findHostsForMigration",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "find hosts to which this VM can be migrated and flag the hosts with enough CPU/RAM to host the VM",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "true if migrating a vm to this host requires storage motion, false otherwise",
          "name": "requiresStorageMotion",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Dedicates a guest vlan range to an account",
      "groupdescription": "VLAN",
      "groupname": "VLANService",
      "isasync": false,
      "name": "dedicateGuestVlanRange",
      "params": [
        {
          "description": "domain ID of the account owning a VLAN",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "physical network ID of the vlan",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "guest vlan range to be dedicated",
          "length": 255,
          "name": "vlanrange",
          "required": true,
          "type": "string"
        },
        {
          "description": "project who will own the VLAN",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "account who will own the VLAN",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listDedicatedGuestVlanRanges",
      "response": [
        {
          "description": "the account of the guest VLAN range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the physical network of the guest vlan range",
          "name": "physicalnetworkid",
          "type": "long"
        },
        {
          "description": "the zone of the guest vlan range",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the project name of the guest vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain ID of the guest VLAN range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the guest VLAN range",
          "name": "guestvlanrange",
          "type": "string"
        },
        {
          "description": "the ID of the guest VLAN range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain name of the guest VLAN range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the guest vlan range",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds VM to specified network by creating a NIC",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "addNicToVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "IP Address for the new network",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "MAC-Address for the new network",
          "length": 255,
          "name": "macaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network ID",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {},
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all static routes",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": false,
      "name": "listStaticRoutes",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list static routes by gateway id (DEPRECATED!)",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list static routes by vpc id",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list static routes by cidr",
          "length": 255,
          "name": "cidr",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list static routes by nexthop ip address",
          "length": 255,
          "name": "nexthop",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "string"
        },
        {
          "description": "list static route by id",
          "length": 255,
          "name": "id",
          "related": "listStaticRoutes",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of static route",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the static route",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "The CIDR to route",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the account associated with the static route",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain associated with the static route",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Gateway ip address the CIDR is routed to",
          "name": "nexthop",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the static route",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the static route",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the state of the static route",
          "name": "state",
          "type": "string"
        },
        {
          "description": "VPC the static route belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with static route",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Lists all public IP addresses",
      "groupdescription": "Public IP Address",
      "groupname": "PublicIPAddressService",
      "isasync": false,
      "name": "listPublicIpAddresses",
      "params": [
        {
          "description": "lists all public IP addresses by zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only IPs used for load balancing",
          "length": 255,
          "name": "forloadbalancing",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists all public IP addresses by VLAN ID",
          "length": 255,
          "name": "vlanid",
          "related": "createVlanIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the virtual network for the IP address",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists all public IP addresses by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists IP address by ID",
          "length": 255,
          "name": "id",
          "related": "updateIpAddress,restartNetwork,listPublicIpAddresses,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only static NAT IP addresses",
          "length": 255,
          "name": "isstaticnat",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "lists all public IP addresses associated to the network specified",
          "length": 255,
          "name": "associatednetworkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists the specified IP address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "limits search results to allocated public IP addresses",
          "length": 255,
          "name": "allocatedonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List IPs belonging to the VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "lists all public IP addresses by physical network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only source NAT IP addresses",
          "length": 255,
          "name": "issourcenat",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "updateIpAddress,restartNetwork,associateIpAddress,associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the ACL applied to this IP",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Updates an ISO file.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": false,
      "name": "updateIso",
      "params": [
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if image is bootable, false otherwise; available only for updateIso API",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the image file",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateIso,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Set mag learning boolean, defaults to false",
          "length": 255,
          "name": "maclearning",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the template, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the image file",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "Set maintenance policy to 'LiveMigrate' or 'ShutdownAndStart'",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the image",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this image.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the image supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the image",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "Optionally specify CPU flags to pass to VM",
          "length": 255,
          "name": "cpuflags",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if template/ISO contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "registerTemplate,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        }
      ]
    },
    {
      "description": "Deletes a detached disk volume.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": false,
      "name": "deleteVolume",
      "params": [
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "resizeVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "list link of domain to group or OU in ldap",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "listDomainLdapLink",
      "params": [
        {
          "description": "The id of the domain which you want to find the LDAP link for.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "linkDomainToLdap",
      "response": [
        {
          "description": "type of the name in LDAP which is linke to the domain",
          "name": "type",
          "type": "string"
        },
        {
          "description": "name of the group or OU in LDAP which is linked to the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Type of the account to auto import",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "uuid of the Domain which is linked to LDAP",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Domain Admin accountId that is created",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "Is LDAP enabled",
          "name": "ldapenabled",
          "type": "boolean"
        }
      ],
      "since": "5.3.6"
    },
    {
      "description": "Changes the default NIC on a VM",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "updateDefaultNicForVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,updateDefaultNicForVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "NIC ID",
          "length": 255,
          "name": "nicid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {},
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            }
          ],
          "type": "set"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Enables a user account",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "enableUser",
      "params": [
        {
          "description": "Enables user by user ID.",
          "length": 255,
          "name": "id",
          "related": "getUser,enableUser,createUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "getUser,createUser",
      "response": [
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a user for an account",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "deleteUser",
      "params": [
        {
          "description": "id of the user to be deleted",
          "length": 255,
          "name": "id",
          "related": "getUser,createUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes network device.",
      "groupdescription": "Network Device",
      "groupname": "NetworkDeviceService",
      "isasync": false,
      "name": "deleteNetworkDevice",
      "params": [
        {
          "description": "Id of network device to delete",
          "length": 255,
          "name": "id",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates a port forwarding rule",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "createPortForwardingRule",
      "params": [
        {
          "description": "VM guest nic secondary IP address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the network of the virtual machine the port forwarding rule will be created for. Required when public IP address is not associated with any guest network yet (VPC case).",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. If not specified 1) defaulted to false when PF rule is being created for VPC guest network 2) in all other cases defaulted to true",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "length": 255,
          "name": "privateendport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine for the port forwarding rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,restartNetwork,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the protocol for the port forwarding rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "length": 255,
          "name": "publicendport",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updatePortForwardingRule,listPortForwardingRules",
      "response": [
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "load template into primary storage",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "prepareTemplate",
      "params": [
        {
          "description": "zone ID of the template to be prepared in primary storage(s).",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "template ID of the template to be prepared in primary storage(s).",
          "length": 255,
          "name": "templateid",
          "related": "registerTemplate,updateTemplate,prepareTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "storage pool ID of the primary storage pool to which the template should be prepared. If it is not provided the template is prepared on all the available primary storage pools.",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration,enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "registerTemplate,updateTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        }
      ]
    },
    {
      "description": "Dedicates a zones.",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": true,
      "name": "dedicateZone",
      "params": [
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Name of the Zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Zone is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the zone",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID to which the Zone is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Extracts a template",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": true,
      "name": "extractTemplate",
      "params": [
        {
          "description": "the ID of the zone where the ISO is originally located",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the template",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the url to which the ISO would be extracted",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        }
      ]
    },
    {
      "description": "Assigns virtual machine or a list of virtual machines to a load balancer rule.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "assignToLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75",
          "length": 255,
          "name": "vmidipmap",
          "required": false,
          "since": "4.4",
          "type": "map"
        },
        {
          "description": "the list of IDs of the virtual machine that are being assigned to the load balancer rule(i.e. virtualMachineIds=1,2,3)",
          "length": 255,
          "name": "virtualmachineids",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Expunge a virtual machine. Once expunged, it cannot be recoverd.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "expungeVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Archive one or more alerts.",
      "groupdescription": "Alert",
      "groupname": "AlertService",
      "isasync": false,
      "name": "archiveAlerts",
      "params": [
        {
          "description": "end date range to archive alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "start date range to archive alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the IDs of the alerts",
          "length": 255,
          "name": "ids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "archive by alert type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all pending asynchronous jobs for the account.",
      "groupdescription": "Async job",
      "groupname": "AsyncjobService",
      "isasync": false,
      "name": "listAsyncJobs",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the start date of the async job",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "tzdate"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "queryAsyncJobResult",
      "response": [
        {
          "description": "the progress information of the PENDING job",
          "name": "jobprocstatus",
          "type": "integer"
        },
        {
          "description": "the user that executed the async command",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the result code for the job",
          "name": "jobresultcode",
          "type": "integer"
        },
        {
          "description": "  the created date of the job",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the result type",
          "name": "jobresulttype",
          "type": "string"
        },
        {
          "description": "the account that executed the async command",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the instance/entity object related to the job",
          "name": "jobinstancetype",
          "type": "string"
        },
        {
          "description": "the unique ID of the instance/entity object related to the job",
          "name": "jobinstanceid",
          "type": "string"
        },
        {
          "description": "the result reason",
          "name": "jobresult",
          "type": "responseobject"
        },
        {
          "description": "the async command executed",
          "name": "cmd",
          "type": "string"
        }
      ]
    },
    {
      "description": "Suspends a project",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "suspendProject",
      "params": [
        {
          "description": "id of the project to be suspended",
          "length": 255,
          "name": "id",
          "related": "suspendProject,activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "activateProject",
      "response": [
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates an IP address",
      "groupdescription": "Public IP Address",
      "groupname": "PublicIPAddressService",
      "isasync": true,
      "name": "updateIpAddress",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the IP to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the public IP address to update",
          "length": 255,
          "name": "id",
          "related": "updateIpAddress,restartNetwork,associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "restartNetwork,associateIpAddress,associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "the ID of the ACL applied to this IP",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Get API limit count for the caller",
      "groupdescription": "Limit",
      "groupname": "LimitService",
      "isasync": false,
      "name": "getApiLimit",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the account uuid of the api remaining count",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "number of api already issued",
          "name": "apiIssued",
          "type": "int"
        },
        {
          "description": "seconds left to reset counters",
          "name": "expireAfter",
          "type": "long"
        },
        {
          "description": "the account name of the api remaining count",
          "name": "account",
          "type": "string"
        },
        {
          "description": "currently allowed number of apis",
          "name": "apiAllowed",
          "type": "int"
        }
      ]
    },
    {
      "description": "Deletes a storage network IP Range.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "deleteStorageNetworkIpRange",
      "params": [
        {
          "description": "the uuid of the storage network ip range",
          "length": 255,
          "name": "id",
          "related": "updateStorageNetworkIpRange,createStorageNetworkIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a domain",
      "groupdescription": "Domain",
      "groupname": "DomainService",
      "isasync": false,
      "name": "createDomain",
      "params": [
        {
          "description": "Network domain for networks in the domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Domain UUID, required for adding domain from another Region",
          "length": 255,
          "name": "domainid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Email address associated with this domain",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "creates domain with this name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "assigns new domain a parent domain by domain ID of the parent.  If no parent domain is specied, the ROOT domain is assumed.",
          "length": 255,
          "name": "parentdomainid",
          "related": "listDomainChildren,createDomain,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listDomainChildren,listDomains,listDomains",
      "response": [
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the email address associated with the domain",
          "name": "email",
          "type": "string"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deleting resource tag(s)",
      "groupdescription": "Resource tags",
      "groupname": "ResourcetagsService",
      "isasync": true,
      "name": "deleteTags",
      "params": [
        {
          "description": "Delete tags for resource id(s)",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Delete tag by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Delete tags matching key/value pairs",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Updates ISO permissions",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": false,
      "name": "updateIsoPermissions",
      "params": [
        {
          "description": "true for featured template/iso, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of accounts. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "permission operator (add, remove, reset)",
          "length": 255,
          "name": "op",
          "required": false,
          "type": "string"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,updateTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true for public template/iso, false for private templates/isos",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "activateProject",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Registers an existing template into the CloudStack cloud.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "registerTemplate",
      "params": [
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the format for the template. Possible values include QCOW2, RAW, VHD and OVA.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "the name of the template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "32 or 64 bits support. 64 by default",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template is available to all accounts; default is true",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Register template for the project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the template or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the MD5 checksum value of this template",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "either 'LiveMigrate' or 'ShutdownAndStart' when performing hypervisor maintenance",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Template details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the URL of where the template is hosted. Possible URL include http:// and https://",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the zone the template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Restarts the network; includes 1) restarting network elements - virtual routers, DHCP servers 2) reapplying all public IPs 3) reapplying loadBalancing/portForwarding rules",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "restartNetwork",
      "params": [
        {
          "description": "If cleanup old network elements",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The ID of the network to restart.",
          "length": 255,
          "name": "id",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "associateIpAddress,associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the ACL applied to this IP",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Logs a user into the CloudStack. A successful login attempt will generate a JSESSIONID cookie value that can be passed in subsequent Query command calls until the \"logout\" command has been issued or the session has expired.",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "login",
      "params": [
        {
          "description": "Hashed password (Default is MD5). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "The id of the domain that the user belongs to. If both domain and domainId are passed in, \"domainId\" parameter takes precendence",
          "length": 255,
          "name": "domainId",
          "required": false,
          "type": "long"
        },
        {
          "description": "Username",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Path of the domain that the user belongs to. Example: domain=/com/cloud/internal. If no domain is passed in, the ROOT (/) domain is assumed.",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "user time zone",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "Username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "User ID",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "Is user registered",
          "name": "registered",
          "type": "string"
        },
        {
          "description": "the time period before the session has expired",
          "name": "timeout",
          "type": "integer"
        },
        {
          "description": "Domain ID that the user belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "last name of the user",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "Domain name that the user belongs to",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the account name the user belongs to",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Session key that can be passed in subsequent Query command calls",
          "name": "sessionkey",
          "type": "string"
        },
        {
          "description": "first name of the user",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the account type (admin, domain-admin, read-only-admin, user)",
          "name": "type",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes VPC offering",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "deleteVPCOffering",
      "params": [
        {
          "description": "the ID of the VPC offering",
          "length": 255,
          "name": "id",
          "related": "updateVPCOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Adds backup image store.",
      "groupdescription": "Image Store",
      "groupname": "ImageStoreService",
      "isasync": false,
      "name": "addImageStore",
      "params": [
        {
          "description": "the URL for the image store",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name for the image store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the image store provider name",
          "length": 255,
          "name": "provider",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Zone ID for the image store",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addSecondaryStorage,listImageStores",
      "response": [
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the details of the image store",
          "name": "details",
          "type": "set"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists all hypervisor capabilities.",
      "groupdescription": "Hypervisor",
      "groupname": "HypervisorService",
      "isasync": false,
      "name": "listHypervisorCapabilities",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the hypervisor capability",
          "length": 255,
          "name": "id",
          "related": "listHypervisorCapabilities",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the maximum number of Data Volumes that can be attached for this hypervisor",
          "name": "maxdatavolumeslimit",
          "type": "integer"
        },
        {
          "description": "the hypervisor type",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "true if storage motion is supported",
          "name": "storagemotionenabled",
          "type": "boolean"
        },
        {
          "description": "the maximum number of Hosts per cluster for this hypervisor",
          "name": "maxhostspercluster",
          "type": "integer"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the maximum number of guest vms recommended for this hypervisor",
          "name": "maxguestslimit",
          "type": "long"
        },
        {
          "description": "the ID of the hypervisor capabilities row",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a network ACL",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "deleteNetworkACL",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "listNetworkACLs,createNetworkACL",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists storage pools available for migration of a volume.",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": false,
      "name": "findStoragePoolsForMigration",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "id",
          "related": "resizeVolume,createVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "enableStorageMaintenance,createStoragePool,cancelStorageMaintenance",
      "response": [
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Creates a storage pool.",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": false,
      "name": "createStoragePool",
      "params": [
        {
          "description": "the scope of the storage: cluster or zone",
          "length": 255,
          "name": "scope",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL of the storage pool",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Pod ID for the storage pool",
          "length": 255,
          "name": "podid",
          "related": "updatePod",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "hypervisor type of the hosts in zone that will be attached to this storage pool. KVM supported as of now.",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "whether the storage should be managed by CloudStack",
          "length": 255,
          "name": "managed",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the cluster ID for the storage pool",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the details for the storage pool",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the name for the storage pool",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacityiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "bytes CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacitybytes",
          "required": false,
          "type": "long"
        },
        {
          "description": "the Zone ID for the storage pool",
          "length": 255,
          "name": "zoneid",
          "related": "listZones,createZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the storage provider name",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "string"
        }
      ],
      "related": "enableStorageMaintenance,cancelStorageMaintenance",
      "response": [
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a Zone.",
      "groupdescription": "Zone",
      "groupname": "ZoneService",
      "isasync": false,
      "name": "createZone",
      "params": [
        {
          "description": "true if local storage offering enabled, false otherwise",
          "length": 255,
          "name": "localstorageenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the second internal DNS for the Zone",
          "length": 255,
          "name": "internaldns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "network type of the zone, can be Basic or Advanced",
          "length": 255,
          "name": "networktype",
          "required": true,
          "type": "string"
        },
        {
          "description": "the name of the Zone",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "length": 255,
          "name": "dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "length": 255,
          "name": "guestcidraddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain, null for public zones",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the first DNS for the Zone",
          "length": 255,
          "name": "dns1",
          "required": true,
          "type": "string"
        },
        {
          "description": "Allocation state of this Zone for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "length": 255,
          "name": "internaldns1",
          "required": true,
          "type": "string"
        },
        {
          "description": "the first DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listZones",
      "response": [
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all network services provided by CloudStack or for the given Provider.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listSupportedNetworkServices",
      "params": [
        {
          "description": "network service provider name",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "network service name to list providers and capabilities of",
          "length": 255,
          "name": "service",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the service name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the service provider name",
          "name": "provider",
          "response": [
            {
              "description": "services for this provider",
              "name": "servicelist",
              "type": "list"
            },
            {
              "description": "the destination physical network",
              "name": "destinationphysicalnetworkid",
              "type": "string"
            },
            {
              "description": "state of the network provider",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the physical network this belongs to",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "true if individual services can be enabled/disabled",
              "name": "canenableindividualservice",
              "type": "boolean"
            },
            {
              "description": "the provider name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "uuid of the network provider",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the list of capabilities",
          "name": "capability",
          "response": [
            {
              "description": "the capability name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the capability value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "can this service capability value can be choosable while creatine network offerings",
              "name": "canchooseservicecapability",
              "type": "boolean"
            }
          ],
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a Storage network IP range.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "createStorageNetworkIpRange",
      "params": [
        {
          "description": "Optional. The vlan the ip range sits on, default to Null when it is not specificed which means you network is not on any Vlan.",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the netmask for storage network",
          "length": 255,
          "name": "netmask",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of pod where the ip range belongs to",
          "length": 255,
          "name": "podid",
          "related": "updatePod",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the gateway for storage network",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "the beginning IP address",
          "length": 255,
          "name": "startip",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ending IP address",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateStorageNetworkIpRange",
      "response": [
        {
          "description": "the end ip of the storage network IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the start ip of the storage network IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the network uuid of storage network IP range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the Pod uuid for the storage network IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "integer"
        },
        {
          "description": "the netmask of the storage network IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the gateway of the storage network IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the uuid of storage network IP range.",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone uuid of the storage network IP range",
          "name": "zoneid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all children domains belonging to a specified domain",
      "groupdescription": "Domain",
      "groupname": "DomainService",
      "isasync": false,
      "name": "listDomainChildren",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list children domains by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list children domain by parent domain ID.",
          "length": 255,
          "name": "id",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "to return the entire tree, use the value \"true\". To return the first level children, use the value \"false\".",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listDomains,listDomains",
      "response": [
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the email address associated with the domain",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Returns an encrypted password for the VM",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": false,
      "name": "getVMPassword",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "The base64 encoded encrypted password of the VM",
          "name": "encryptedpassword",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists dedicated guest vlan ranges",
      "groupdescription": "VLAN",
      "groupname": "VLANService",
      "isasync": false,
      "name": "listDedicatedGuestVlanRanges",
      "params": [
        {
          "description": "the account with which the guest VLAN range is associated. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list dedicated guest vlan ranges by id",
          "length": 255,
          "name": "id",
          "related": "listDedicatedGuestVlanRanges",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID with which the guest VLAN range is associated.  If used with the account parameter, returns all guest VLAN ranges for that account in the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "physical network id of the guest VLAN range",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the dedicated guest vlan range",
          "length": 255,
          "name": "guestvlanrange",
          "required": false,
          "type": "string"
        },
        {
          "description": "zone of the guest VLAN range",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "project who will own the guest VLAN range",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain ID of the guest VLAN range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the zone of the guest vlan range",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the ID of the guest VLAN range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain name of the guest VLAN range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the guest vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the guest VLAN range",
          "name": "guestvlanrange",
          "type": "string"
        },
        {
          "description": "the physical network of the guest vlan range",
          "name": "physicalnetworkid",
          "type": "long"
        },
        {
          "description": "the project id of the guest vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account of the guest VLAN range",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a network serviceProvider to a physical network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "addNetworkServiceProvider",
      "params": [
        {
          "description": "the list of services to be enabled for this physical network service provider",
          "length": 255,
          "name": "servicelist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the Physical Network ID to add the provider to",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the destination Physical Network ID to bridge to",
          "length": 255,
          "name": "destinationphysicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name for the physical network service provider",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listTrafficTypes",
      "response": [
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all network ACL items",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": false,
      "name": "listNetworkACLs",
      "params": [
        {
          "description": "list network ACL items by ACL ID",
          "length": 255,
          "name": "aclid",
          "related": "listNetworkACLLists,createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists network ACL Item with the specified ID",
          "length": 255,
          "name": "id",
          "related": "listNetworkACLs,createNetworkACL",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network ACL items by action",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network ACL items by protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network ACL items by network ID",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNiciraNvpDeviceNetworks,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network ACL items by traffic type - ingress or egress",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "related": "createNetworkACL",
      "response": [
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Delete site to site vpn gateway",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "deleteVpnGateway",
      "params": [
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "updateVpnGateway,createVpnGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Copies a template from one zone to another.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": true,
      "name": "copyTemplate",
      "params": [
        {
          "description": "ID of the zone the template is currently hosted on. If not specified and template is cross-zone, then we will sync this template to region wide image store.",
          "length": 255,
          "name": "sourcezoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Template ID.",
          "length": 255,
          "name": "id",
          "related": "updateTemplate,copyTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is being copied to.",
          "length": 255,
          "name": "destzoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates a service offering.",
      "groupdescription": "Service Offering",
      "groupname": "ServiceOfferingService",
      "isasync": false,
      "name": "createServiceOffering",
      "params": [
        {
          "description": "io requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "the CPU number of the service offering",
          "length": 255,
          "name": "cpunumber",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The deployment planner heuristics used to deploy a VM of this offering. If null, value of global config vm.deployment.planner is used",
          "length": 255,
          "name": "deploymentplanner",
          "required": false,
          "type": "string"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "length": 255,
          "name": "limitcpuuse",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "whether compute offering iops is custom or not",
          "length": 255,
          "name": "customizediops",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the HA for the service offering",
          "length": 255,
          "name": "offerha",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "is this a system vm offering",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "min iops of the compute offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "since": "4.4",
          "type": "long"
        },
        {
          "description": "bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "the total memory of the service offering in MB",
          "length": 255,
          "name": "memory",
          "required": false,
          "type": "integer"
        },
        {
          "description": "data transfer rate in megabits per second allowed. Supported only for non-System offering and system offerings having \"domainrouter\" systemvmtype",
          "length": 255,
          "name": "networkrate",
          "required": false,
          "type": "integer"
        },
        {
          "description": "max iops of the compute offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "since": "4.4",
          "type": "long"
        },
        {
          "description": "the tags for this service offering.",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain, null for public offerings",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "length": 255,
          "name": "provisioningtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the service offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the virtual machine needs to be volatile so that on every reboot of VM, original root disk is dettached then destroyed and a fresh root disk is created and attached to VM",
          "length": 255,
          "name": "isvolatile",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "details for planner, used to store specific parameters",
          "length": 255,
          "name": "serviceofferingdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "the host tag for this service offering.",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the storage type of the service offering. Values are local and shared.",
          "length": 255,
          "name": "storagetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "length": 255,
          "name": "hypervisorsnapshotreserve",
          "required": false,
          "since": "4.4",
          "type": "integer"
        },
        {
          "description": "the system VM type. Possible types are \"domainrouter\", \"consoleproxy\" and \"secondarystoragevm\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the service offering",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listServiceOfferings,updateServiceOffering",
      "response": [
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the tags for the service offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "is true if the offering is customized",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        },
        {
          "description": "Domain name for the offering",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the domain id of the service offering",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a physical network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "createPhysicalNetwork",
      "params": [
        {
          "description": "the isolation method for the physical network[VLAN/L3/GRE]",
          "length": 255,
          "name": "isolationmethods",
          "required": false,
          "type": "list"
        },
        {
          "description": "the name of the physical network",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a physical network",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the broadcast domain range for the physical network[Pod or Zone]. In Acton release it can be Zone only in Advance zone, and Pod in Basic",
          "length": 255,
          "name": "broadcastdomainrange",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tag the physical network",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the VLAN for the physical network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the physical network",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the speed for the physical network[1G/10G]",
          "length": 255,
          "name": "networkspeed",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the vlan of the physical network",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "name of the physical network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "state of the physical network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Broadcast domain range of the physical network",
          "name": "broadcastdomainrange",
          "type": "string"
        },
        {
          "description": "comma separated tag",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the uuid of the physical network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the speed of the physical network",
          "name": "networkspeed",
          "type": "string"
        },
        {
          "description": "the domain id of the physical network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "isolation methods",
          "name": "isolationmethods",
          "type": "string"
        },
        {
          "description": "zone id of the physical network",
          "name": "zoneid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "lists network that are using a nicira nvp device",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": false,
      "name": "listNiciraNvpDeviceNetworks",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "nicira nvp device ID",
          "length": 255,
          "name": "nvpdeviceid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateNetwork,createNetwork,listNetworks,updateNetwork",
      "response": [
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
          "name": "ipexclusionlist",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Change ownership of a VM from one account to another. This API is available for Basic zones with security groups and Advanced zones with guest networks. A root administrator can reassign a VM from any account to any other account in any domain. A domain administrator can reassign a VM to any account in the same domain.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": false,
      "name": "assignVirtualMachine",
      "params": [
        {
          "description": "list of new network ids in which the moved VM will participate. In case no network ids are provided the VM will be part of the default network for that zone. In case there is no network yet created for the new account the default network will be created.",
          "length": 255,
          "name": "networkids",
          "related": "updateNetwork,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "list"
        },
        {
          "description": "id of the VM to be moved",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,assignVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "domain id of the new VM owner.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "account name of the new VM owner.",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {},
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a disk volume from a disk offering. This disk volume must still be attached to a virtual machine to make use of it.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "createVolume",
      "params": [
        {
          "description": "Arbitrary volume size",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "the snapshot ID for the disk volume. Either diskOfferingId or snapshotId must be passed in.",
          "length": 255,
          "name": "snapshotid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the disk format to use. Either 'QCOW2' or 'RAW'",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk offering. Either diskOfferingId or snapshotId must be passed in.",
          "length": 255,
          "name": "diskofferingid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the project associated with the volume. Mutually exclusive with account parameter",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account associated with the disk volume. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "min iops",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "type": "string"
        },
        {
          "description": "max iops",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to display the volume to the end user or not.",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the disk controller to use. Either 'IDE', 'VIRTIO' or 'SCSI'",
          "length": 255,
          "name": "diskcontroller",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine; to be used with snapshot Id, VM to which the volume gets attached after creation",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID associated with the disk offering. If used with the account parameter returns the disk volume associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "resizeVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a firewall rule for a given IP address",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "createFirewallRule",
      "params": [
        {
          "description": "the CIDR list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the starting port of firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ending port of firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of firewallrule: system/user",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateEgressFirewallRule",
      "response": [
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "List virtual machine snapshot by conditions",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": false,
      "name": "listVMSnapshot",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "createVMSnapshot,listVMSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists snapshot by snapshot name or display name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "state of the virtual machine snapshot",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVMSnapshot",
      "response": [
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the parent ID of the vm snapshot",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the vm ID of the vm snapshot",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the display name of the vm snapshot",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "indiates if this is current snapshot",
          "name": "current",
          "type": "boolean"
        },
        {
          "description": "the create date of the vm snapshot",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the parent displayName of the vm snapshot",
          "name": "parentName",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the vm snapshot",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the description of the vm snapshot",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "VM Snapshot type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the Zone ID of the vm snapshot",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the vm snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the vm snapshot",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates a Pod.",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": false,
      "name": "updatePod",
      "params": [
        {
          "description": "the ending IP address for the Pod",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask of the Pod",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway for the Pod",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the starting IP address for the Pod",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "id",
          "related": "updatePod",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the Pod",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the starting IP for the Pod",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the ending IP for the Pod",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attaches an ISO to a virtual machine.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": true,
      "name": "attachIso",
      "params": [
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "updateTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,attachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {},
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disassociates an IP address from the account.",
      "groupdescription": "Public IP Address",
      "groupname": "PublicIPAddressService",
      "isasync": true,
      "name": "disassociateIpAddress",
      "params": [
        {
          "description": "the ID of the public IP address to disassociate",
          "length": 255,
          "name": "id",
          "related": "associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Resizes a volume",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "resizeVolume",
      "params": [
        {
          "description": "New maximum number of IOPS",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "Verify OK to Shrink",
          "length": 255,
          "name": "shrinkok",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "resizeVolume,resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "New minimum number of IOPS",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "new disk offering id",
          "length": 255,
          "name": "diskofferingid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "New volume size in GB",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        }
      ],
      "related": "resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes affinity group",
      "groupdescription": "Affinity Group",
      "groupname": "AffinityGroupService",
      "isasync": true,
      "name": "deleteAffinityGroup",
      "params": [
        {
          "description": "The name of the affinity group. Mutually exclusive with ID parameter",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the project of the affinity group",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the affinity group. Mutually exclusive with name parameter",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account of the affinity group. Must be specified with domain ID",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID of account owning the affinity group",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Puts storage pool into maintenance state",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": true,
      "name": "enableStorageMaintenance",
      "params": [
        {
          "description": "Primary storage ID",
          "length": 255,
          "name": "id",
          "related": "enableStorageMaintenance,cancelStorageMaintenance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "cancelStorageMaintenance",
      "response": [
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Deletes a network offering.",
      "groupdescription": "Network Offering",
      "groupname": "NetworkOfferingService",
      "isasync": false,
      "name": "deleteNetworkOffering",
      "params": [
        {
          "description": "the ID of the network offering",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a Network Service Provider.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "deleteNetworkServiceProvider",
      "params": [
        {
          "description": "the ID of the network service provider",
          "length": 255,
          "name": "id",
          "related": "listTrafficTypes",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Update a Storage network IP range, only allowed when no IPs in this range have been allocated.",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "updateStorageNetworkIpRange",
      "params": [
        {
          "description": "UUID of storage network ip range",
          "length": 255,
          "name": "id",
          "related": "updateStorageNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ending IP address",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Optional. the vlan the ip range sits on",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the netmask for storage network",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IP address",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "integer"
        },
        {
          "description": "the Zone uuid of the storage network IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the start ip of the storage network IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the netmask of the storage network IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the Pod uuid for the storage network IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the end ip of the storage network IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the uuid of storage network IP range.",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the gateway of the storage network IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the network uuid of storage network IP range",
          "name": "networkid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "List network devices",
      "groupdescription": "Network Device",
      "groupname": "NetworkDeviceService",
      "isasync": false,
      "name": "listNetworkDevice",
      "params": [
        {
          "description": "parameters for network device",
          "length": 255,
          "name": "networkdeviceparameterlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network device type, now supports ExternalDhcp, JuniperSRXFirewall, PaloAltoFirewall",
          "length": 255,
          "name": "networkdevicetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the network device",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Dedicates a Pod.",
      "groupdescription": "Pod",
      "groupname": "PodService",
      "isasync": true,
      "name": "dedicatePod",
      "params": [
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Name of the Pod",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the pod",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Pod is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID to which the Pod is dedicated",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a user for an account that already exists",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "createUser",
      "params": [
        {
          "description": "Creates the user under the specified domain. Has to be accompanied with the account parameter",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Unique username.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "firstname",
          "length": 255,
          "name": "firstname",
          "required": true,
          "type": "string"
        },
        {
          "description": "lastname",
          "length": 255,
          "name": "lastname",
          "required": true,
          "type": "string"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": true,
          "type": "string"
        }
      ],
      "related": "getUser",
      "response": [
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates attributes of a template.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "updateTemplate",
      "params": [
        {
          "description": "the name of the image file",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Set mag learning boolean, defaults to false",
          "length": 255,
          "name": "maclearning",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the image",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if image is bootable, false otherwise; available only for updateIso API",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Set maintenance policy to 'LiveMigrate' or 'ShutdownAndStart'",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the image supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Optionally specify CPU flags to pass to VM",
          "length": 255,
          "name": "cpuflags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the image file",
          "length": 255,
          "name": "id",
          "related": "updateTemplate,createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the image",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the template, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this image.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if template/ISO contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        }
      ],
      "related": "createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "lists all available apis on the server, provided by the Api Discovery plugin",
      "groupdescription": "System",
      "groupname": "SystemService",
      "isasync": false,
      "name": "listApis",
      "params": [
        {
          "description": "API name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "version of CloudStack the api was introduced in",
          "name": "since",
          "type": "string"
        },
        {
          "description": "the name of the api command",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if api is asynchronous",
          "name": "isasync",
          "type": "boolean"
        },
        {
          "description": "the list params the api accepts",
          "name": "params",
          "response": [
            {
              "description": "true if this parameter is required for the api request",
              "name": "required",
              "type": "boolean"
            },
            {
              "description": "version of CloudStack the api was introduced in",
              "name": "since",
              "type": "string"
            },
            {
              "description": "parameter type",
              "name": "type",
              "type": "string"
            },
            {
              "description": "comma separated related apis to get the parameter",
              "name": "related",
              "type": "string"
            },
            {
              "description": "the name of the api parameter",
              "name": "name",
              "type": "string"
            },
            {
              "description": "length of the parameter",
              "name": "length",
              "type": "int"
            },
            {
              "description": "description of the api parameter",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "api response fields",
          "name": "response",
          "response": [
            {
              "description": "description of the api response field",
              "name": "description",
              "type": "string"
            },
            {
              "description": "response field type",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the api response field",
              "name": "name",
              "type": "string"
            },
            {
              "description": "api response fields",
              "name": "response",
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "comma separated related apis",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the name of the group this api command belongs to",
          "name": "groupname",
          "type": "string"
        },
        {
          "description": "response field type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the description of the group this api command belongs to",
          "name": "groupdescription",
          "type": "string"
        },
        {
          "description": "description of the api",
          "name": "description",
          "type": "string"
        }
      ],
      "since": "4.1.0"
    },
    {
      "description": "Creates a VLAN IP range.",
      "groupdescription": "VLAN",
      "groupname": "VLANService",
      "isasync": false,
      "name": "createVlanIpRange",
      "params": [
        {
          "description": "the gateway of the VLAN IP range",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IP address in the VLAN IP range",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the physical network id",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID or VID of the VLAN. If not specified, will be defaulted to the vlan of the network or if vlan of the network is null - to Untagged",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if VLAN is of Virtual type, false if Direct",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "domain ID of the account owning a VLAN",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the gateway of the IPv6 network. Required for Shared networks and Isolated networks when it belongs to VPC",
          "length": 255,
          "name": "ip6gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "startipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IP address in the VLAN IP range",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network id",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "endipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "project who will own the VLAN. If VLAN is Zone wide, this parameter should be ommited",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the CIDR of IPv6 network, must be at least /64",
          "length": 255,
          "name": "ip6cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "optional parameter. Have to be specified for Direct Untagged vlan only.",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "account who will own the VLAN. If VLAN is Zone wide, this parameter should be ommited",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates site to site vpn connection",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "updateVpnConnection",
      "params": [
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "updateVpnConnection",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Updates a vm group",
      "groupdescription": "VM Group",
      "groupname": "VMGroupService",
      "isasync": false,
      "name": "updateInstanceGroup",
      "params": [
        {
          "description": "new instance group name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Instance group ID",
          "length": 255,
          "name": "id",
          "related": "updateInstanceGroup,createInstanceGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createInstanceGroup",
      "response": [
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the instance group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project ID of the instance group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates site to site vpn local gateway",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "createVpnGateway",
      "params": [
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "public ip address id of the vpn gateway",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateVpnGateway",
      "response": [
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "is vpn gateway for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates snapshot for a vm.",
      "groupdescription": "Snapshot",
      "groupname": "SnapshotService",
      "isasync": true,
      "name": "createVMSnapshot",
      "params": [
        {
          "description": "The display name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The description of the snapshot",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the parent displayName of the vm snapshot",
          "name": "parentName",
          "type": "string"
        },
        {
          "description": "the name of the vm snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the parent ID of the vm snapshot",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "VM Snapshot type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "indiates if this is current snapshot",
          "name": "current",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the vm snapshot",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the vm ID of the vm snapshot",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ID of the vm snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the vm snapshot",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the create date of the vm snapshot",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the display name of the vm snapshot",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the vm snapshot",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Adds detail for the Resource.",
      "groupdescription": "Resource metadata",
      "groupname": "ResourcemetadataService",
      "isasync": true,
      "name": "addResourceDetail",
      "params": [
        {
          "description": "resource id to create the details for",
          "length": 255,
          "name": "resourceid",
          "required": true,
          "type": "string"
        },
        {
          "description": "pass false if you want this detail to be disabled for the regular user. True by default",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "Map of (key/value pairs)",
          "length": 255,
          "name": "details",
          "required": true,
          "type": "map"
        },
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists vpn users",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": false,
      "name": "listVpnUsers",
      "params": [
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the username of the vpn user.",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "The uuid of the Vpn user",
          "length": 255,
          "name": "id",
          "related": "listVpnUsers,addVpnUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addVpnUser",
      "response": [
        {
          "description": "the state of the Vpn User",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the vpn userID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the username of the vpn user",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Remove an Ldap Configuration",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "deleteLdapConfiguration",
      "params": [
        {
          "description": "Hostname",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "port",
          "name": "port",
          "type": "int"
        },
        {
          "description": "hostname",
          "name": "hostname",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Upgrades domain router to a new service offering",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": false,
      "name": "changeServiceForRouter",
      "params": [
        {
          "description": "The ID of the router",
          "length": 255,
          "name": "id",
          "related": "changeServiceForRouter,destroyRouter",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the service offering ID to apply to the domain router",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter",
      "response": [
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates the volume.",
      "groupdescription": "Volume",
      "groupname": "VolumeService",
      "isasync": true,
      "name": "updateVolume",
      "params": [
        {
          "description": "an optional field, whether to the display the volume to the end user or not.",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The state of the volume",
          "length": 255,
          "name": "state",
          "required": false,
          "since": "4.3",
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,updateVolume,uploadVolume,updateVolume,listVolumes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Destination storage pool UUID for the volume",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "the disk controller to use. Either 'IDE', 'VIRTIO' or 'SCSI'",
          "length": 255,
          "name": "diskcontroller",
          "required": false,
          "type": "string"
        },
        {
          "description": "The chain info of the volume",
          "length": 255,
          "name": "chaininfo",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "The path of the volume",
          "length": 255,
          "name": "path",
          "required": false,
          "type": "string"
        }
      ],
      "related": "resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,uploadVolume,updateVolume,listVolumes",
      "response": [
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "disk controller this volume is on",
          "name": "diskcontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "format of the disk",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an IP forwarding rule",
      "groupdescription": "NAT",
      "groupname": "NATService",
      "isasync": true,
      "name": "deleteIpForwardingRule",
      "params": [
        {
          "description": "the ID of the forwarding rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a Region",
      "groupdescription": "Region",
      "groupname": "RegionService",
      "isasync": false,
      "name": "addRegion",
      "params": [
        {
          "description": "Id of the Region",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Region service endpoint",
          "length": 255,
          "name": "endpoint",
          "required": true,
          "type": "string"
        },
        {
          "description": "Name of the region",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        },
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists traffic types of a given physical network.",
      "groupdescription": "Usage",
      "groupname": "UsageService",
      "isasync": false,
      "name": "listTrafficTypes",
      "params": [
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        },
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates account information for the authenticated user",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": false,
      "name": "updateAccount",
      "params": [
        {
          "description": "the current account name",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the domain where the account exists",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "listAccounts,updateAccount,disableAccount,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "new name for the account",
          "length": 255,
          "name": "newname",
          "required": true,
          "type": "string"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "Network domain for the account's networks; empty string will update domainName with NULL value",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listAccounts,disableAccount,listAccounts,enableAccount",
      "response": [
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Adds secondary storage.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "addSecondaryStorage",
      "params": [
        {
          "description": "the Zone ID for the secondary storage",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the URL for the secondary storage",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listImageStores",
      "response": [
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the details of the image store",
          "name": "details",
          "type": "set"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        }
      ]
    },
    {
      "description": "Updates properties of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect. UpdateVirtualMachine does not first check whether the VM is stopped. Therefore, stop the VM manually before issuing this call.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": false,
      "name": "updateVirtualMachine",
      "params": [
        {
          "description": "true if VM contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "user generated name",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.",
          "length": 32768,
          "name": "userdata",
          "required": false,
          "type": "string"
        },
        {
          "description": "Details in key/value pairs.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "group of the virtual machine",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled for the virtual machine, false otherwise",
          "length": 255,
          "name": "haenable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "new host name of the vm. The VM has to be stopped/started for this update to take affect",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "either 'LiveMigrate' or 'ShutdownAndStart' when performing hypervisor maintenance",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "Timeout (in ms) to for the boot menu",
          "length": 255,
          "name": "bootmenutimeout",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the OS type that best represents this VM.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vm to the end user or not.",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm",
          "length": 255,
          "name": "instancename",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,updateVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {},
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        }
      ]
    },
    {
      "description": "Disables an account",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": true,
      "name": "disableAccount",
      "params": [
        {
          "description": "Disables specified account in this domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If true, only lock the account; else disable the account",
          "length": 255,
          "name": "lock",
          "required": true,
          "type": "boolean"
        },
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "listAccounts,disableAccount,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Disables specified account.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listAccounts,listAccounts,enableAccount",
      "response": [
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists domains and provides detailed information for listed domains",
      "groupdescription": "Domain",
      "groupname": "DomainService",
      "isasync": false,
      "name": "listDomains",
      "params": [
        {
          "description": "List domain by domain name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List domains by domain level.",
          "length": 255,
          "name": "level",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List domain by domain ID.",
          "length": 255,
          "name": "id",
          "related": "listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listDomains",
      "response": [
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the email address associated with the domain",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "List registered keypairs",
      "groupdescription": "SSH",
      "groupname": "SSHService",
      "isasync": false,
      "name": "listSSHKeyPairs",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "A key pair name to look for",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "A public key fingerprint to look for",
          "length": 255,
          "name": "fingerprint",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain id of the keypair owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "the owner of the keypair",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain name of the keypair owner",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists accounts and provides detailed account information for listed accounts",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": false,
      "name": "listAccounts",
      "params": [
        {
          "description": "list accounts by account type. Valid account types are 1 (admin), 2 (domain-admin), and 0 (user).",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "long"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list accounts by state. Valid states are enabled, disabled, and locked.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list accounts by cleanuprequired attribute (values are true or false)",
          "length": 255,
          "name": "iscleanuprequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list account by account ID",
          "length": 255,
          "name": "id",
          "related": "listAccounts,listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list account by account name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listAccounts,enableAccount",
      "response": [
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "updateNetwork",
      "params": [
        {
          "description": "IP exclusion list for private networks",
          "length": 255,
          "name": "ipexclusionlist",
          "required": false,
          "type": "string"
        },
        {
          "description": "network domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "The first DNS server of the network",
          "length": 255,
          "name": "dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "CIDR for guest VMs, CloudStack allocates IPs to guest VMs only from this CIDR",
          "length": 255,
          "name": "guestvmcidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Force update even if CIDR type is different",
          "length": 255,
          "name": "changecidr",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "id",
          "related": "updateNetwork,createNetwork,listNetworks,updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the new name for the network",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The second DNS server of the network",
          "length": 255,
          "name": "dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "the new display text for the network",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createNetwork,listNetworks,updateNetwork",
      "response": [
        {
          "description": "VPC the network belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
          "name": "ipexclusionlist",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Cancels maintenance for primary storage",
      "groupdescription": "Storage Pool",
      "groupname": "StoragePoolService",
      "isasync": true,
      "name": "cancelStorageMaintenance",
      "params": [
        {
          "description": "the primary storage ID",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        }
      ]
    },
    {
      "description": "Destroys a router.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": true,
      "name": "destroyRouter",
      "params": [
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "destroyRouter",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Retrieves the current status of asynchronous job.",
      "groupdescription": "Async job",
      "groupname": "AsyncjobService",
      "isasync": false,
      "name": "queryAsyncJobResult",
      "params": [
        {
          "description": "the ID of the asychronous job",
          "length": 255,
          "name": "jobid",
          "related": "queryAsyncJobResult",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the async command executed",
          "name": "cmd",
          "type": "string"
        },
        {
          "description": "the result reason",
          "name": "jobresult",
          "type": "responseobject"
        },
        {
          "description": "the user that executed the async command",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the progress information of the PENDING job",
          "name": "jobprocstatus",
          "type": "integer"
        },
        {
          "description": "the instance/entity object related to the job",
          "name": "jobinstancetype",
          "type": "string"
        },
        {
          "description": "the account that executed the async command",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the result code for the job",
          "name": "jobresultcode",
          "type": "integer"
        },
        {
          "description": "the result type",
          "name": "jobresulttype",
          "type": "string"
        },
        {
          "description": "  the created date of the job",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the unique ID of the instance/entity object related to the job",
          "name": "jobinstanceid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all network ACLs",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": false,
      "name": "listNetworkACLLists",
      "params": [
        {
          "description": "Lists network ACL with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "listNetworkACLLists,createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network ACLs by VPC ID",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network ACLs by network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network ACLs by specified name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createNetworkACLList",
      "response": [
        {
          "description": "the ID of the ACL",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Description of the ACL",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the Name of the ACL",
          "name": "name",
          "type": "string"
        },
        {
          "description": "is ACL for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "Id of the VPC this ACL is associated with",
          "name": "vpcid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a template from the system. All virtual machines using the deleted template will not be affected.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": true,
      "name": "deleteTemplate",
      "params": [
        {
          "description": "the ID of the template",
          "length": 255,
          "name": "id",
          "related": "createTemplate,listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of zone of the template",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists image stores.",
      "groupdescription": "Image Store",
      "groupname": "ImageStoreService",
      "isasync": false,
      "name": "listImageStores",
      "params": [
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "id",
          "related": "listImageStores",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID for the image store",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the image store protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "the image store provider",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the details of the image store",
          "name": "details",
          "type": "set"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a account, and all users associated with this account",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": true,
      "name": "deleteAccount",
      "params": [
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "listAccounts,enableAccount",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "List Event Types",
      "groupdescription": "Event",
      "groupname": "EventService",
      "isasync": false,
      "name": "listEventTypes",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "Event Type",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a VPC",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "deleteVPC",
      "params": [
        {
          "description": "the ID of the VPC",
          "length": 255,
          "name": "id",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Adds a new cluster",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": false,
      "name": "addCluster",
      "params": [
        {
          "description": "the Zone ID for the cluster",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the password for the host",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username for the cluster",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "hypervisor type of the cluster: XenServer,KVM",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the cluster name",
          "length": 255,
          "name": "clustername",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of the cluster: CloudManaged, ExternalManaged",
          "length": 255,
          "name": "clustertype",
          "required": true,
          "type": "string"
        },
        {
          "description": "the URL",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the percentage of capacity currently allocated",
              "name": "percentageallocated",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes VM from specified network by deleting a NIC",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "removeNicFromVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,removeNicFromVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "NIC ID",
          "length": 255,
          "name": "nicid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {},
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates site to site vpn local gateway",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "updateVpnGateway",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "updateVpnGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "is vpn gateway for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Activates a project",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "activateProject",
      "params": [
        {
          "description": "id of the project to be modified",
          "length": 255,
          "name": "id",
          "related": "activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Delete a certificate to CloudStack",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "deleteSslCert",
      "params": [
        {
          "description": "Id of SSL certificate",
          "length": 255,
          "name": "id",
          "related": "uploadSslCert",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists dedicated hosts.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": false,
      "name": "listDedicatedHosts",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the account associated with the host. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list dedicated hosts by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the domain associated with the host",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Account ID of the host",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the host",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the domain ID of the host",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Releases a dedicated guest vlan range to the system",
      "groupdescription": "VLAN",
      "groupname": "VLANService",
      "isasync": true,
      "name": "releaseDedicatedGuestVlanRange",
      "params": [
        {
          "description": "the ID of the dedicated guest vlan range",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Delete one or more alerts.",
      "groupdescription": "Alert",
      "groupname": "AlertService",
      "isasync": false,
      "name": "deleteAlerts",
      "params": [
        {
          "description": "the IDs of the alerts",
          "length": 255,
          "name": "ids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "delete by alert type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "end date range to delete alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "start date range to delete alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates load balancer",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": true,
      "name": "updateLoadBalancerRule",
      "params": [
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the load balancer rule to update",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the HAProxy client_timeout setting for this load balancing rule (in ms).",
          "length": 255,
          "name": "clienttimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the HAProxy server_timeout setting for this load balancing rule (in ms).",
          "length": 255,
          "name": "servertimeout",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listLoadBalancerRules",
      "response": [
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the protocol of the loadbalanacer rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the HAProxy server_timeout setting for this load balancing rule.",
          "name": "servertimeout",
          "type": "integer"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the HAProxy client_timeout setting for this load balancing rule.",
          "name": "clienttimeout",
          "type": "integer"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Enables an account",
      "groupdescription": "Account",
      "groupname": "AccountService",
      "isasync": false,
      "name": "enableAccount",
      "params": [
        {
          "description": "Enables specified account.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "listAccounts,enableAccount",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Enables specified account in this domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listAccounts",
      "response": [
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Attempts Migration of a VM to a different host or Root volume of the vm to a different storage pool",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "migrateVirtualMachine",
      "params": [
        {
          "description": "Destination storage pool ID to migrate VM volumes to. Required for migrating the root disk volume",
          "length": 255,
          "name": "storageid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,migrateVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Destination Host ID to migrate VM to. Required for live migrating a VM from host to host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists load balancer stickiness policies.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "listLBStickinessPolicies",
      "params": [
        {
          "description": "the ID of the load balancer stickiness policy",
          "length": 255,
          "name": "id",
          "related": "listLBStickinessPolicies",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updatePortForwardingRule,listPortForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            },
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a template of a virtual machine. The virtual machine must be in a STOPPED state. A template created from this command is automatically designated as a private template visible to the account that created it.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": true,
      "name": "createTemplate",
      "params": [
        {
          "description": "DEPRECATED SINCE 5.1.0: Optional, VM ID. If this presents, it is going to create a baremetal template for VM this ID refers to. This is only for VM whose hypervisor type is BareMetal",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the disk volume the template is being created from. Either this parameter, or snapshotId has to be passed in",
          "length": 255,
          "name": "volumeid",
          "related": "resizeVolume,attachVolume,createVolume,detachVolume,migrateVolume,uploadVolume,updateVolume,listVolumes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "32 or 64 bit",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "create template for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Optionally specify CPU flags to pass to VM",
          "length": 255,
          "name": "cpuflags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "length": 255,
          "name": "manufacturerstring",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Maintenance policy for this template, either LiveMigrate or ShutdownAndStart.",
          "length": 255,
          "name": "maintenancepolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the snapshot the template is being created from. Either this parameter, or volumeId has to be passed in",
          "length": 255,
          "name": "snapshotid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "length": 255,
          "name": "optimisefor",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Set mag learning boolean, defaults to false",
          "length": 255,
          "name": "maclearning",
          "required": false,
          "type": "string"
        },
        {
          "description": "Template details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        }
      ],
      "related": "listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
      "response": [
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "Enable MAC learning true or false",
          "name": "maclearning",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Manufacturer string in hardware",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "Any CPU flags to pass to VM",
          "name": "cpuflags",
          "type": "string"
        },
        {
          "description": "Optimise for Generic of Windows VMs",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "The maintenance policy for the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if template contains XS tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "The URL where the templates originally was downloaded from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        }
      ]
    },
    {
      "description": "Deletes a network",
      "groupdescription": "Network",
      "groupname": "NetworkService",
      "isasync": true,
      "name": "deleteNetwork",
      "params": [
        {
          "description": "Force delete a network. Network will be marked as 'Destroy' even when commands to shutdown and cleanup to the backend fails.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "id",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists dedicated clusters.",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": false,
      "name": "listDedicatedClusters",
      "params": [
        {
          "description": "the name of the account associated with the cluster. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the cluster",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the cluster",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list dedicated clusters by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the cluster",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the Account ID of the cluster",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain ID of the cluster",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the cluster",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Account name of the host",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the ID of the cluster",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the domain name of the host",
          "name": "domainname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Uploads a custom certificate for the console proxy VMs to use for SSL. Can be used to upload a single certificate signed by a known CA. Can also be used, through multiple calls, to upload a chain of certificates from CA to the custom certificate itself.",
      "groupdescription": "Certificate",
      "groupname": "CertificateService",
      "isasync": true,
      "name": "uploadCustomCertificate",
      "params": [
        {
          "description": "The private key for the attached certificate.",
          "length": 65535,
          "name": "privatekey",
          "required": false,
          "type": "string"
        },
        {
          "description": "DNS domain suffix that the certificate is granted for.",
          "length": 255,
          "name": "domainsuffix",
          "required": true,
          "type": "string"
        },
        {
          "description": "An integer providing the location in a chain that the certificate will hold. Usually, this can be left empty. When creating a chain, the top level certificate should have an ID of 1, with each step in the chain incrementing by one. Example, CA with id = 1, Intermediate CA with id = 2, Site certificate with ID = 3",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "integer"
        },
        {
          "description": "A name / alias for the certificate.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The certificate to be uploaded.",
          "length": 65535,
          "name": "certificate",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "message of the certificate upload operation",
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "description": "Reconnects a host.",
      "groupdescription": "Host",
      "groupname": "HostService",
      "isasync": true,
      "name": "reconnectHost",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "hoststatus"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "Domain ID to which the host is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "Domain name to which the host is dedicated",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "Is the host dedicated?",
          "name": "dedicated",
          "type": "boolean"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the memory total of the host",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "Affinity group ID to which the host is dedicated",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "Affinity group name to which the host is dedicated",
          "name": "affinitygroupname",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "Account name to which the host is dedicated",
          "name": "accountname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "hosttype"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "Account ID to which the host is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a project",
      "groupdescription": "Project",
      "groupname": "ProjectService",
      "isasync": true,
      "name": "deleteProject",
      "params": [
        {
          "description": "id of the project to be deleted",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Delete site to site vpn customer gateway",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "deleteVpnCustomerGateway",
      "params": [
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "listVpnCustomerGateways,createVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a vm group",
      "groupdescription": "VM Group",
      "groupname": "VMGroupService",
      "isasync": false,
      "name": "createInstanceGroup",
      "params": [
        {
          "description": "The project of the instance group",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID of account owning the instance group",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the instance group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the account of the instance group. The account parameter must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project ID of the instance group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the instance group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all port forwarding rules for an IP address.",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": false,
      "name": "listPortForwardingRules",
      "params": [
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of IP address of the port forwarding services",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,listPortForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list port forwarding rules for certain network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updatePortForwardingRule",
      "response": [
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        }
      ]
    },
    {
      "description": "List ISO visibility and all accounts that have permissions to view this ISO.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": false,
      "name": "listIsoPermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsoPermissions,listIsoPermissions,listTemplatePermissions",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsoPermissions,listTemplatePermissions",
      "response": [
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of accounts the template is available for",
          "name": "account",
          "type": "list"
        },
        {
          "description": "the list of projects the template is available for",
          "name": "projectids",
          "type": "list"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a template visibility permissions. A public template is visible to all accounts within the same domain. A private template is visible only to the owner of the template. A priviledged template is a private template with account permissions added. Only accounts specified under the template permissions are visible to them.",
      "groupdescription": "Template",
      "groupname": "TemplateService",
      "isasync": false,
      "name": "updateTemplatePermissions",
      "params": [
        {
          "description": "permission operator (add, remove, reset)",
          "length": 255,
          "name": "op",
          "required": false,
          "type": "string"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsos,registerTemplate,registerIso,createTemplate,listTemplates,copyTemplate,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "a comma delimited list of accounts. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "true for public template/iso, false for private templates/isos",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true for featured template/iso, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Resets the password for virtual machine. The virtual machine must be in a \"Stopped\" state and the template must already support this feature for this command to take effect. [async]",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "resetPasswordForVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {},
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a port forwarding rule. Only the private port and the virtual machine can be updated.",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "updatePortForwardingRule",
      "params": [
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the port forwarding rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule",
          "required": true,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the private port of the port forwarding rule",
          "length": 255,
          "name": "privateport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "VM guest nic Secondary ip address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "since": "4.5",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine for the port forwarding rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a private gateway",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "createPrivateGateway",
      "params": [
        {
          "description": "the IP address of the Private gateaway",
          "length": 255,
          "name": "ipaddress",
          "required": true,
          "type": "string"
        },
        {
          "description": "the VPC network belongs to",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the uuid of the private network to use for the private gateway",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the netmask of the Private gateway (DEPRECATED!).",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the Private gateway (DEPRECATED!).",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "source NAT supported value. Default value false. If 'true' source NAT is enabled on the private gateway 'false': sourcenat is not supported",
          "length": 255,
          "name": "sourcenatsupported",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "VPC the private gateaway belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the private gateway",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "ACL Id set for private gateway",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the CIDR of the private network",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "State of the gateway, can be Creating, Ready, Deleting",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the network implementation uri for the private gateway",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the id of the private gateway",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the private gateway's ip address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the account associated with the private gateway",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the zone the private gateway belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the network name",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "Souce Nat enable status",
          "name": "sourcenatsupported",
          "type": "boolean"
        },
        {
          "description": "the domain associated with the private gateway",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the private gateway",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the private gateway",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "zone id of the private gateway",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "link an existing cloudstack domain to group or OU in ldap",
      "groupdescription": "Authentication",
      "groupname": "AuthenticationService",
      "isasync": false,
      "name": "linkDomainToLdap",
      "params": [
        {
          "description": "domain admin username in LDAP ",
          "length": 255,
          "name": "admin",
          "required": false,
          "type": "string"
        },
        {
          "description": "The id of the domain which has to be linked to LDAP.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Type of the account to auto import. Specify 0 for user and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": true,
          "type": "short"
        },
        {
          "description": "name of the group or OU in LDAP",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of the ldap name. GROUP or OU",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Domain Admin accountId that is created",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "Type of the account to auto import",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "type of the name in LDAP which is linke to the domain",
          "name": "type",
          "type": "string"
        },
        {
          "description": "uuid of the Domain which is linked to LDAP",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the group or OU in LDAP which is linked to the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Is LDAP enabled",
          "name": "ldapenabled",
          "type": "boolean"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Find user account by API key",
      "groupdescription": "User",
      "groupname": "UserService",
      "isasync": false,
      "name": "getUser",
      "params": [
        {
          "description": "API key of the user",
          "length": 255,
          "name": "userapikey",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists load balancer rules.",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "listLoadBalancerRules",
      "params": [
        {
          "description": "list by network ID the rule belongs to",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the public IP address ID of the load balancer rule",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine of the load balancer rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the loadbalanacer rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the HAProxy server_timeout setting for this load balancing rule.",
          "name": "servertimeout",
          "type": "integer"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the HAProxy client_timeout setting for this load balancing rule.",
          "name": "clienttimeout",
          "type": "integer"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Upload a certificate to CloudStack",
      "groupdescription": "Load Balancer",
      "groupname": "LoadBalancerService",
      "isasync": false,
      "name": "uploadSslCert",
      "params": [
        {
          "description": "Private key",
          "length": 16384,
          "name": "privatekey",
          "required": true,
          "type": "string"
        },
        {
          "description": "account that will own the SSL certificate",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "SSL certificate",
          "length": 16384,
          "name": "certificate",
          "required": true,
          "type": "string"
        },
        {
          "description": "Password for the private key",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the SSL certificate",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "domain ID of the account owning the SSL certificate",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Certificate chain of trust",
          "length": 2097152,
          "name": "certchain",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project name of the certificate",
          "name": "project",
          "type": "string"
        },
        {
          "description": "SSL certificate ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "certificate chain",
          "name": "certchain",
          "type": "string"
        },
        {
          "description": "account for the certificate",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "certificate fingerprint",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "List of loabalancers this certificate is bound to",
          "name": "loadbalancerrulelist",
          "type": "list"
        },
        {
          "description": "certificate",
          "name": "certificate",
          "type": "string"
        },
        {
          "description": "the project id of the certificate",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a firewall rule",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "deleteFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Acquires and associates a public IP to an account.",
      "groupdescription": "Public IP Address",
      "groupname": "PublicIPAddressService",
      "isasync": true,
      "name": "associateIpAddress",
      "params": [
        {
          "description": "The network this IP address should be associated to.",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the availability zone you want to acquire an public IP address from",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Deploy VM for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the VPC you want the IP address to be associated with",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,updateVPC,createVPC,listVPCs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account to associate with this IP address",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the domain to associate with this IP address",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the IP to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "the ID of the ACL applied to this IP",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "the name of the ACL applied to this IP",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates site to site vpn customer gateway",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "createVpnCustomerGateway",
      "params": [
        {
          "description": "create site-to-site VPN customer gateway for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "ikelifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "esplifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "the account associated with the gateway. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "length": 255,
          "name": "esppolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "length": 255,
          "name": "cidrlist",
          "required": true,
          "type": "list"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway. Cannot contain newline or double quotes.",
          "length": 255,
          "name": "ipsecpsk",
          "required": true,
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "length": 255,
          "name": "ikepolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "name of this customer gateway",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Force Encapsulation for NAT traversal",
          "length": 255,
          "name": "forceencap",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If DPD is enabled for VPN connection",
          "length": 255,
          "name": "dpd",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listVpnCustomerGateways",
      "response": [
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds vpn users",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "addVpnUser",
      "params": [
        {
          "description": "add vpn user to the specific project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the vpn user. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "username for the vpn user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "password for the username",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpn userID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the username of the vpn user",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the state of the Vpn User",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Delete site to site vpn connection",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "deleteVpnConnection",
      "params": [
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists site to site vpn customer gateways",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": false,
      "name": "listVpnCustomerGateways",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of the customer gateway",
          "length": 255,
          "name": "id",
          "related": "listVpnCustomerGateways",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        }
      ]
    },
    {
      "description": "Resets the SSH Key for virtual machine. The virtual machine must be in a \"Stopped\" state. [async]",
      "groupdescription": "SSH",
      "groupname": "SSHService",
      "isasync": true,
      "name": "resetSSHKeyForVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,resetSSHKeyForVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the ssh key pair used to login to the virtual machine",
          "length": 255,
          "name": "keypair",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a ACL rule in the given network (the network has to belong to VPC)",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "createNetworkACL",
      "params": [
        {
          "description": "error code for this ICMP message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The network of the VM the ACL will be created for",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending port of ACL",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The network of the VM the ACL will be created for",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "The network of the VM the ACL will be created for",
          "length": 255,
          "name": "number",
          "required": false,
          "type": "integer"
        },
        {
          "description": "scl entry action, allow or deny",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL,can be ingress or egress, defaulted to ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the starting port of ACL",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the CIDR list to allow traffic from/to",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists all for this IP address",
      "groupdescription": "CloudOps",
      "groupname": "CloudOpsService",
      "isasync": false,
      "name": "listWhoHasThisIp",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The IP Address that you are searching the owner of.",
          "length": 255,
          "name": "ipaddress",
          "required": true,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The UUID of nics or user_ip_address row.",
          "length": 255,
          "name": "uuid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Broadcast uri",
          "name": "broadcasturi",
          "type": "uri"
        },
        {
          "description": "VPC uuid",
          "name": "vpcuuid",
          "type": "string"
        },
        {
          "description": "Domain uuid",
          "name": "domainuuid",
          "type": "string"
        },
        {
          "description": "Network uuid",
          "name": "networkuuid",
          "type": "string"
        },
        {
          "description": "VPC name",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "Nics MAC Address",
          "name": "macaddress",
          "type": "string"
        },
        {
          "description": "Domain name",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "Network name",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "Created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "VM Name",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "UUID of the nic or users_ip_address",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "VM type",
          "name": "virtualmachinetype",
          "type": "virtualmachinetype"
        },
        {
          "description": "Associated network name",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "Netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "State",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Associated network uuid",
          "name": "associatednetworkuuid",
          "type": "string"
        },
        {
          "description": "Mode",
          "name": "mode",
          "type": "dhcpmode"
        },
        {
          "description": "VM uuid",
          "name": "virtualmachineuuid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Release the dedication for cluster",
      "groupdescription": "Cluster",
      "groupname": "ClusterService",
      "isasync": true,
      "name": "releaseDedicatedCluster",
      "params": [
        {
          "description": "the ID of the Cluster",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a disk offering.",
      "groupdescription": "Disk Offering",
      "groupname": "DiskOfferingService",
      "isasync": false,
      "name": "deleteDiskOffering",
      "params": [
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List resource tag(s)",
      "groupdescription": "Resource tags",
      "groupname": "ResourcetagsService",
      "isasync": false,
      "name": "listTags",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by key",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by value",
          "length": 255,
          "name": "value",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by resource id",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by customer name",
          "length": 255,
          "name": "customer",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "customer associated with the tag",
          "name": "customer",
          "type": "string"
        },
        {
          "description": "the project name where tag belongs to",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account associated with the tag",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id the tag belongs to",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "resource type",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "tag value",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the tag",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain associated with the tag",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "tag key name",
          "name": "key",
          "type": "string"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Updates remote access vpn",
      "groupdescription": "VPN",
      "groupname": "VPNService",
      "isasync": true,
      "name": "updateRemoteAccessVpn",
      "params": [
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "id of the remote access vpn",
          "length": 255,
          "name": "id",
          "related": "updateRemoteAccessVpn",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "is vpn for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Updates VPC offering",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "updateVPCOffering",
      "params": [
        {
          "description": "the name of the VPC offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "update state for the VPC offering; supported states - Enabled/Disabled",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the VPC offering",
          "length": 255,
          "name": "id",
          "related": "updateVPCOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the display text of the VPC offering",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "The primary system compute offering name used for the virtual router",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "The secondary system compute offering id used for the virtual router",
          "name": "secondaryserviceofferingid",
          "type": "string"
        },
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "The secondary system compute offering name used for the virtual router",
          "name": "secondaryserviceofferingname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "The primary system compute offering id used for the virtual router",
          "name": "serviceofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Create a virtual router element.",
      "groupdescription": "Router",
      "groupname": "RouterService",
      "isasync": true,
      "name": "createVirtualRouterElement",
      "params": [
        {
          "description": "the network service provider ID of the virtual router element",
          "length": 255,
          "name": "nspid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The provider type. Supported types are VirtualRouter (default) and VPCVirtualRouter",
          "length": 255,
          "name": "providertype",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a VPC",
      "groupdescription": "VPC",
      "groupname": "VPCService",
      "isasync": true,
      "name": "createVPC",
      "params": [
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the domain ID associated with the VPC. If used with the account parameter returns the VPC associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Comma separated list of IP addresses to configure as syslog servers on the VPC to forward IP tables logging",
          "length": 255,
          "name": "syslogserverlist",
          "required": false,
          "type": "string"
        },
        {
          "description": "VPC network domain. All networks inside the VPC will belong to this domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the VPC offering",
          "length": 255,
          "name": "vpcofferingid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Source NAT CIDR list for used to allow other CIDRs to be source NATted by the VPC over the public interface",
          "length": 255,
          "name": "sourcenatlist",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the vpc to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the name of the VPC",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "If set to false, the VPC won't start (VPC VR will not get allocated) until its first network gets implemented. True by default.",
          "length": 255,
          "name": "start",
          "required": false,
          "since": "4.3",
          "type": "boolean"
        },
        {
          "description": "the account associated with the VPC. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "create VPC for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
          "length": 255,
          "name": "cidr",
          "required": true,
          "type": "string"
        }
      ],
      "related": "updateVPC,createVPC,listVPCs",
      "response": [
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the vpc offering the vpc is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "Source Nat CIDR list for used to allow other CIDRs to be source NATted by the VPC over the public interface",
          "name": "sourcenatlist",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Comma separated list of IP addresses to configure as syslog servers on the VPC to forward IP tables logging",
          "name": "syslogserverlist",
          "type": "string"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the ACL applied to this IP",
              "name": "aclname",
              "type": "string"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
              "name": "zonesnetworkspans",
              "type": "set"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if network can span multiple zones",
              "name": "strechedl2subnet",
              "type": "boolean"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    }
                  ],
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "list of ip addresses and/or ranges of addresses to be excluded from the network for assignment",
              "name": "ipexclusionlist",
              "type": "string"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "display text of the vpc offering the vpc is created from",
          "name": "vpcofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Scales the virtual machine to a new service offering.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "scaleVirtualMachine",
      "params": [
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings,updateServiceOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name value pairs of custom parameters for cpu,memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Destroys a virtual machine. Once destroyed, only the administrator can recover it.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "destroyVirtualMachine",
      "params": [
        {
          "description": "If true is passed, the vm is expunged immediately. False by default.",
          "length": 255,
          "name": "expunge",
          "required": false,
          "since": "4.2.1",
          "type": "boolean"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,destroyVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {},
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates egress firewall rule ",
      "groupdescription": "Firewall",
      "groupname": "FirewallService",
      "isasync": true,
      "name": "updateEgressFirewallRule",
      "params": [
        {
          "description": "the ID of the egress firewall rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Lists all available service offerings.",
      "groupdescription": "Service Offering",
      "groupname": "ServiceOfferingService",
      "isasync": false,
      "name": "listServiceOfferings",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine. Pass this in if you want to see the available service offering that a virtual machine can be changed to.",
          "length": 255,
          "name": "virtualmachineid",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "ID of the service offering",
          "length": 255,
          "name": "id",
          "related": "listServiceOfferings,updateServiceOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "is this a system vm offering",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the system VM type. Possible types are \"consoleproxy\", \"secondarystoragevm\" or \"domainrouter\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the service offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateServiceOffering",
      "response": [
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "Domain name for the offering",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "the domain id of the service offering",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "is true if the offering is customized",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        },
        {
          "description": "the tags for the service offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists all supported OS categories for this cloud.",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": false,
      "name": "listOsCategories",
      "params": [
        {
          "description": "list os category by name",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "3.0.1",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Os category by id",
          "length": 255,
          "name": "id",
          "related": "listOsCategories",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the OS category",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the OS category",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists affinity group types available",
      "groupdescription": "Affinity Group",
      "groupname": "AffinityGroupService",
      "isasync": false,
      "name": "listAffinityGroupTypes",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes detail for the Resource.",
      "groupdescription": "Resource metadata",
      "groupname": "ResourcemetadataService",
      "isasync": true,
      "name": "removeResourceDetail",
      "params": [
        {
          "description": "Delete details matching key/value pairs",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "Delete details for resource id",
          "length": 255,
          "name": "resourceid",
          "required": true,
          "type": "string"
        },
        {
          "description": "Delete detail by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all supported OS types for this cloud.",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": false,
      "name": "listOsTypes",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by Os type Id",
          "length": 255,
          "name": "id",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by Os Category id",
          "length": 255,
          "name": "oscategoryid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list os by description",
          "length": 255,
          "name": "description",
          "required": false,
          "since": "3.0.1",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        },
        {
          "description": "is the guest OS user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all the system wide capacities.",
      "groupdescription": "System",
      "groupname": "SystemService",
      "isasync": false,
      "name": "listCapacity",
      "params": [
        {
          "description": "lists capacity by the Pod ID",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "recalculate capacities and fetch the latest",
          "length": 255,
          "name": "fetchlatest",
          "required": false,
          "since": "3.0.0",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists capacity by type* CAPACITY_TYPE_MEMORY = 0* CAPACITY_TYPE_CPU = 1* CAPACITY_TYPE_STORAGE = 2* CAPACITY_TYPE_STORAGE_ALLOCATED = 3* CAPACITY_TYPE_VIRTUAL_NETWORK_PUBLIC_IP = 4* CAPACITY_TYPE_PRIVATE_IP = 5* CAPACITY_TYPE_SECONDARY_STORAGE = 6* CAPACITY_TYPE_VLAN = 7* CAPACITY_TYPE_DIRECT_ATTACHED_PUBLIC_IP = 8* CAPACITY_TYPE_LOCAL_STORAGE = 9.",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Sort the results. Available values: Usage",
          "length": 255,
          "name": "sortby",
          "required": false,
          "since": "3.0.0",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists capacity by the Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists capacity by the Cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": false,
          "since": "3.0.0",
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Cluster name",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the capacity type",
          "name": "type",
          "type": "short"
        },
        {
          "description": "the Pod ID",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Zone ID",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the capacity currently in use",
          "name": "capacityused",
          "type": "long"
        },
        {
          "description": "the total capacity available",
          "name": "capacitytotal",
          "type": "long"
        },
        {
          "description": "the Cluster ID",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the percentage of capacity currently allocated",
          "name": "percentageallocated",
          "type": "string"
        },
        {
          "description": "the Zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod name",
          "name": "podname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes a Guest OS from listing.",
      "groupdescription": "Guest OS",
      "groupname": "GuestOSService",
      "isasync": true,
      "name": "removeGuestOs",
      "params": [
        {
          "description": "ID of the guest OS",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Starts a virtual machine.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "startVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "startVirtualMachine,stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Deployment planner to use for vm allocation. Available to ROOT admin only",
          "length": 255,
          "name": "deploymentplanner",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "hostid",
          "related": "",
          "required": false,
          "since": "3.0.1",
          "type": "uuid"
        }
      ],
      "related": "stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {},
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a virtual machine.",
      "groupdescription": "Virtual Machine",
      "groupname": "VirtualMachineService",
      "isasync": true,
      "name": "stopVirtualMachine",
      "params": [
        {
          "description": "Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend).  The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "stopVirtualMachine,detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Detaches any ISO file (if any) currently attached to a virtual machine.",
      "groupdescription": "ISO",
      "groupname": "ISOService",
      "isasync": true,
      "name": "detachIso",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "detachIso,rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "rebootVirtualMachine,detachIso,startVirtualMachine,attachIso,stopVirtualMachine,listVirtualMachines,resetSSHKeyForVirtualMachine,destroyVirtualMachine,restoreVirtualMachine,updateVirtualMachine,deployVirtualMachine,updateVMAffinityGroup,removeNicFromVirtualMachine,revertToVMSnapshot,changeServiceForVirtualMachine,addNicToVirtualMachine,updateDefaultNicForVirtualMachine,resetPasswordForVirtualMachine",
      "response": [
        {
          "description": "Optimise for 'Windows' or 'Generic'",
          "name": "optimisefor",
          "type": "optimisefor"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "Manufacturer String to put in hardware info, defaults to 'Mission Critical Cloud'",
          "name": "manufacturerstring",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "controller type of the root volume",
          "name": "rootdevicecontroller",
          "type": "diskcontrollertype"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "true if vm contains XS tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Maintenance Policy of the VM",
          "name": "maintenancepolicy",
          "type": "maintenancepolicy"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the vgpu type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if VM needs to a stop/start to receive updated VM specs on the hypervisor",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "Timeout of the boot menu (in ms)",
          "name": "bootmenutimeout",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates a service offering.",
      "groupdescription": "Service Offering",
      "groupname": "ServiceOfferingService",
      "isasync": false,
      "name": "updateServiceOffering",
      "params": [
        {
          "description": "the name of the service offering to be updated",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the service offering to be updated",
          "length": 255,
          "name": "id",
          "related": "updateServiceOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "sort key of the service offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the display text of the service offering to be updated",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the tags for the service offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "is true if the offering is customized",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the domain id of the service offering",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        },
        {
          "description": "Domain name for the offering",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates a network ACL for the given VPC",
      "groupdescription": "Network ACL",
      "groupname": "NetworkACLService",
      "isasync": true,
      "name": "createNetworkACLList",
      "params": [
        {
          "description": "ID of the VPC associated with this network ACL list",
          "length": 255,
          "name": "vpcid",
          "related": "updateVPC,createVPC,listVPCs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Description of the network ACL list",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the list to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "Name of the network ACL list",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Name of the ACL",
          "name": "name",
          "type": "string"
        },
        {
          "description": "is ACL for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ID of the ACL",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Id of the VPC this ACL is associated with",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "Description of the ACL",
          "name": "description",
          "type": "string"
        }
      ]
    }
  ],
  "count": 376
}
